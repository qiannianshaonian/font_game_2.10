{
  "code": "import { Matrix } from \"../../maths/Matrix\";\r\nimport { Value2D } from \"../shader/d2/value/Value2D\";\r\nimport { CONST3D2D } from \"../utils/CONST3D2D\";\r\nimport { RenderState2D } from \"../utils/RenderState2D\";\r\nimport { SubmitBase } from \"./SubmitBase\";\r\nexport class SubmitCanvas extends SubmitBase {\r\n    constructor() {\r\n        super(SubmitBase.TYPE_2D);\r\n        this._matrix = new Matrix();\r\n        this._matrix4 = CONST3D2D.defaultMatrix4.concat();\r\n        this.shaderValue = new Value2D(0, 0);\r\n    }\r\n    static create(canvas, alpha, filters) {\r\n        var o = (!SubmitCanvas.POOL._length) ? (new SubmitCanvas()) : SubmitCanvas.POOL[--SubmitCanvas.POOL._length];\r\n        o.canv = canvas;\r\n        o._ref = 1;\r\n        o._numEle = 0;\r\n        var v = o.shaderValue;\r\n        v.alpha = alpha;\r\n        v.defines.setValue(0);\r\n        filters && filters.length && v.setFilters(filters);\r\n        return o;\r\n    }\r\n    renderSubmit() {\r\n        var preAlpha = RenderState2D.worldAlpha;\r\n        var preMatrix4 = RenderState2D.worldMatrix4;\r\n        var preMatrix = RenderState2D.worldMatrix;\r\n        var preFilters = RenderState2D.worldFilters;\r\n        var preWorldShaderDefines = RenderState2D.worldShaderDefines;\r\n        var v = this.shaderValue;\r\n        var m = this._matrix;\r\n        var m4 = this._matrix4;\r\n        var mout = Matrix.TEMP;\r\n        Matrix.mul(m, preMatrix, mout);\r\n        m4[0] = mout.a;\r\n        m4[1] = mout.b;\r\n        m4[4] = mout.c;\r\n        m4[5] = mout.d;\r\n        m4[12] = mout.tx;\r\n        m4[13] = mout.ty;\r\n        RenderState2D.worldMatrix = mout.clone();\r\n        RenderState2D.worldMatrix4 = m4;\r\n        RenderState2D.worldAlpha = RenderState2D.worldAlpha * v.alpha;\r\n        if (v.filters && v.filters.length) {\r\n            RenderState2D.worldFilters = v.filters;\r\n            RenderState2D.worldShaderDefines = v.defines;\r\n        }\r\n        this.canv['flushsubmit']();\r\n        RenderState2D.worldAlpha = preAlpha;\r\n        RenderState2D.worldMatrix4 = preMatrix4;\r\n        RenderState2D.worldMatrix.destroy();\r\n        RenderState2D.worldMatrix = preMatrix;\r\n        RenderState2D.worldFilters = preFilters;\r\n        RenderState2D.worldShaderDefines = preWorldShaderDefines;\r\n        return 1;\r\n    }\r\n    releaseRender() {\r\n        if ((--this._ref) < 1) {\r\n            var cache = SubmitCanvas.POOL;\r\n            this._mesh = null;\r\n            cache[cache._length++] = this;\r\n        }\r\n    }\r\n    getRenderType() {\r\n        return SubmitBase.TYPE_CANVAS;\r\n    }\r\n    ;\r\n}\r\nSubmitCanvas.POOL = [];\r\n{\r\n    SubmitCanvas.POOL._length = 0;\r\n}\r\n",
  "references": [
    "F:/ProjectsWorks/font_game_2.10/libs/laya/maths/Matrix.ts",
    "F:/ProjectsWorks/font_game_2.10/libs/laya/resource/Context.ts",
    "F:/ProjectsWorks/font_game_2.10/libs/laya/webgl/shader/d2/ShaderDefines2D.ts",
    "F:/ProjectsWorks/font_game_2.10/libs/laya/webgl/shader/d2/value/Value2D.ts",
    "F:/ProjectsWorks/font_game_2.10/libs/laya/webgl/utils/CONST3D2D.ts",
    "F:/ProjectsWorks/font_game_2.10/libs/laya/webgl/utils/RenderState2D.ts",
    "F:/ProjectsWorks/font_game_2.10/libs/laya/webgl/submit/SubmitBase.ts"
  ],
  "dts": {
    "name": "F:/ProjectsWorks/font_game_2.10/libs/laya/webgl/submit/SubmitCanvas.d.ts",
    "writeByteOrderMark": false,
    "text": "import { Matrix } from \"../../maths/Matrix\";\r\nimport { Context } from \"../../resource/Context\";\r\nimport { SubmitBase } from \"./SubmitBase\";\r\nexport declare class SubmitCanvas extends SubmitBase {\r\n    _matrix: Matrix;\r\n    canv: Context;\r\n    _matrix4: any[];\r\n    static create(canvas: any, alpha: number, filters: any[]): SubmitCanvas;\r\n    constructor();\r\n    renderSubmit(): number;\r\n    releaseRender(): void;\r\n    getRenderType(): number;\r\n    static POOL: any;\r\n}\r\n"
  }
}

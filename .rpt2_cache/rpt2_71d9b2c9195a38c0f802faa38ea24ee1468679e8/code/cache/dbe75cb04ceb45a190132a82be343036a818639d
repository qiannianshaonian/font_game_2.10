{
  "code": "import { Mesh2D } from \"./Mesh2D\";\r\nexport class MeshQuadTexture extends Mesh2D {\r\n    constructor() {\r\n        super(MeshQuadTexture.const_stride, 4, 4);\r\n        this.canReuse = true;\r\n        this.setAttributes(MeshQuadTexture._fixattriInfo);\r\n        if (!MeshQuadTexture._fixib) {\r\n            this.createQuadIB(MeshQuadTexture._maxIB);\r\n            MeshQuadTexture._fixib = this._ib;\r\n        }\r\n        else {\r\n            this._ib = MeshQuadTexture._fixib;\r\n            this._quadNum = MeshQuadTexture._maxIB;\r\n        }\r\n    }\r\n    static __int__() {\r\n        MeshQuadTexture._fixattriInfo = [5126, 4, 0,\r\n            5121, 4, 16,\r\n            5121, 4, 20];\r\n    }\r\n    static getAMesh(mainctx) {\r\n        var ret = null;\r\n        if (MeshQuadTexture._POOL.length) {\r\n            ret = MeshQuadTexture._POOL.pop();\r\n        }\r\n        else\r\n            ret = new MeshQuadTexture();\r\n        mainctx && ret._vb._resizeBuffer(64 * 1024 * MeshQuadTexture.const_stride, false);\r\n        return ret;\r\n    }\r\n    releaseMesh() {\r\n        this._vb.setByteLength(0);\r\n        this.vertNum = 0;\r\n        this.indexNum = 0;\r\n        MeshQuadTexture._POOL.push(this);\r\n    }\r\n    destroy() {\r\n        this._vb.destroy();\r\n        this._vb.deleteBuffer();\r\n    }\r\n    addQuad(pos, uv, color, useTex) {\r\n        var vb = this._vb;\r\n        var vpos = (vb._byteLength >> 2);\r\n        vb.setByteLength((vpos + MeshQuadTexture.const_stride) << 2);\r\n        var vbdata = vb._floatArray32 || vb.getFloat32Array();\r\n        var vbu32Arr = vb._uint32Array;\r\n        var cpos = vpos;\r\n        var useTexVal = useTex ? 0xff : 0;\r\n        vbdata[cpos++] = pos[0];\r\n        vbdata[cpos++] = pos[1];\r\n        vbdata[cpos++] = uv[0];\r\n        vbdata[cpos++] = uv[1];\r\n        vbu32Arr[cpos++] = color;\r\n        vbu32Arr[cpos++] = useTexVal;\r\n        vbdata[cpos++] = pos[2];\r\n        vbdata[cpos++] = pos[3];\r\n        vbdata[cpos++] = uv[2];\r\n        vbdata[cpos++] = uv[3];\r\n        vbu32Arr[cpos++] = color;\r\n        vbu32Arr[cpos++] = useTexVal;\r\n        vbdata[cpos++] = pos[4];\r\n        vbdata[cpos++] = pos[5];\r\n        vbdata[cpos++] = uv[4];\r\n        vbdata[cpos++] = uv[5];\r\n        vbu32Arr[cpos++] = color;\r\n        vbu32Arr[cpos++] = useTexVal;\r\n        vbdata[cpos++] = pos[6];\r\n        vbdata[cpos++] = pos[7];\r\n        vbdata[cpos++] = uv[6];\r\n        vbdata[cpos++] = uv[7];\r\n        vbu32Arr[cpos++] = color;\r\n        vbu32Arr[cpos++] = useTexVal;\r\n        vb._upload = true;\r\n    }\r\n}\r\nMeshQuadTexture.const_stride = 24;\r\nMeshQuadTexture._maxIB = 16 * 1024;\r\nMeshQuadTexture._POOL = [];\r\n",
  "references": [
    "F:/ProjectsWorks/font_game_2.10/libs/laya/webgl/utils/IndexBuffer2D.ts",
    "F:/ProjectsWorks/font_game_2.10/libs/laya/webgl/utils/Mesh2D.ts",
    "F:/ProjectsWorks/font_game_2.10/libs/laya/webgl/utils/VertexBuffer2D.ts"
  ],
  "dts": {
    "name": "F:/ProjectsWorks/font_game_2.10/libs/laya/webgl/utils/MeshQuadTexture.d.ts",
    "writeByteOrderMark": false,
    "text": "import { Mesh2D } from \"./Mesh2D\";\r\nexport declare class MeshQuadTexture extends Mesh2D {\r\n    static const_stride: number;\r\n    private static _fixib;\r\n    private static _maxIB;\r\n    private static _fixattriInfo;\r\n    private static _POOL;\r\n    static __int__(): void;\r\n    constructor();\r\n    static getAMesh(mainctx: boolean): MeshQuadTexture;\r\n    releaseMesh(): void;\r\n    destroy(): void;\r\n    addQuad(pos: any[], uv: ArrayLike<number>, color: number, useTex: boolean): void;\r\n}\r\n"
  }
}

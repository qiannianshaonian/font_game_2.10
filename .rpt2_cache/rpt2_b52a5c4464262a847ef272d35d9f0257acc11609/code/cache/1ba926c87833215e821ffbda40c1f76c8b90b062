{
  "code": "import { WebGLContext } from \"../WebGLContext\";\r\nexport class BlendMode {\r\n    static _init_(gl) {\r\n        BlendMode.fns = [\r\n            BlendMode.BlendNormal,\r\n            BlendMode.BlendAdd,\r\n            BlendMode.BlendMultiply,\r\n            BlendMode.BlendScreen,\r\n            BlendMode.BlendOverlay,\r\n            BlendMode.BlendLight,\r\n            BlendMode.BlendMask,\r\n            BlendMode.BlendDestinationOut,\r\n            BlendMode.BlendAddOld\r\n        ];\r\n        BlendMode.targetFns = [\r\n            BlendMode.BlendNormalTarget,\r\n            BlendMode.BlendAddTarget,\r\n            BlendMode.BlendMultiplyTarget,\r\n            BlendMode.BlendScreenTarget,\r\n            BlendMode.BlendOverlayTarget,\r\n            BlendMode.BlendLightTarget,\r\n            BlendMode.BlendMask,\r\n            BlendMode.BlendDestinationOut,\r\n            BlendMode.BlendAddTargetOld\r\n        ];\r\n    }\r\n    static BlendNormal(gl) {\r\n        WebGLContext.setBlendFunc(gl, gl.ONE, gl.ONE_MINUS_SRC_ALPHA, true);\r\n    }\r\n    static BlendAddOld(gl) {\r\n        WebGLContext.setBlendFunc(gl, gl.ONE, gl.DST_ALPHA, true);\r\n    }\r\n    static BlendAdd(gl) {\r\n        WebGLContext.setBlendFunc(gl, gl.ONE, gl.ONE, true);\r\n    }\r\n    static BlendMultiply(gl) {\r\n        WebGLContext.setBlendFunc(gl, gl.DST_COLOR, gl.ONE_MINUS_SRC_ALPHA, true);\r\n    }\r\n    static BlendScreen(gl) {\r\n        WebGLContext.setBlendFunc(gl, gl.ONE, gl.ONE, true);\r\n    }\r\n    static BlendOverlay(gl) {\r\n        WebGLContext.setBlendFunc(gl, gl.ONE, gl.ONE_MINUS_SRC_COLOR, true);\r\n    }\r\n    static BlendLight(gl) {\r\n        WebGLContext.setBlendFunc(gl, gl.ONE, gl.ONE, true);\r\n    }\r\n    static BlendNormalTarget(gl) {\r\n        WebGLContext.setBlendFunc(gl, gl.ONE, gl.ONE_MINUS_SRC_ALPHA, true);\r\n    }\r\n    static BlendAddTargetOld(gl) {\r\n        WebGLContext.setBlendFunc(gl, gl.ONE, gl.DST_ALPHA, true);\r\n    }\r\n    static BlendAddTarget(gl) {\r\n        WebGLContext.setBlendFunc(gl, gl.ONE, gl.ONE, true);\r\n    }\r\n    static BlendMultiplyTarget(gl) {\r\n        WebGLContext.setBlendFunc(gl, gl.DST_COLOR, gl.ONE_MINUS_SRC_ALPHA, true);\r\n    }\r\n    static BlendScreenTarget(gl) {\r\n        WebGLContext.setBlendFunc(gl, gl.ONE, gl.ONE, true);\r\n    }\r\n    static BlendOverlayTarget(gl) {\r\n        WebGLContext.setBlendFunc(gl, gl.ONE, gl.ONE_MINUS_SRC_COLOR, true);\r\n    }\r\n    static BlendLightTarget(gl) {\r\n        WebGLContext.setBlendFunc(gl, gl.ONE, gl.ONE, true);\r\n    }\r\n    static BlendMask(gl) {\r\n        WebGLContext.setBlendFunc(gl, gl.ZERO, gl.SRC_ALPHA, true);\r\n    }\r\n    static BlendDestinationOut(gl) {\r\n        WebGLContext.setBlendFunc(gl, gl.ZERO, gl.ZERO, true);\r\n    }\r\n}\r\nBlendMode.activeBlendFunction = null;\r\nBlendMode.NAMES = [\r\n    \"normal\",\r\n    \"add\",\r\n    \"multiply\",\r\n    \"screen\",\r\n    \"overlay\",\r\n    \"light\",\r\n    \"mask\",\r\n    \"destination-out\",\r\n    \"add_old\"\r\n];\r\nBlendMode.TOINT = {\r\n    \"normal\": 0,\r\n    \"add\": 1,\r\n    \"multiply\": 2,\r\n    \"screen\": 3,\r\n    \"overlay\": 4,\r\n    \"light\": 5,\r\n    \"mask\": 6,\r\n    \"destination-out\": 7,\r\n    \"lighter\": 1,\r\n    \"lighter_old\": 8,\r\n    \"add_old\": 8\r\n};\r\nBlendMode.NORMAL = \"normal\";\r\nBlendMode.MASK = \"mask\";\r\nBlendMode.LIGHTER = \"lighter\";\r\n",
  "references": [
    "/Users/zonst/Documents/font2.0/font_game_2.10/libs/laya/webgl/WebGLContext.ts"
  ],
  "dts": {
    "name": "/Users/zonst/Documents/font2.0/font_game_2.10/.rpt2_cache/placeholder/laya/webgl/canvas/BlendMode.d.ts",
    "writeByteOrderMark": false,
    "text": "import { WebGLContext } from \"../WebGLContext\";\r\nexport declare class BlendMode {\r\n    static activeBlendFunction: Function;\r\n    static NAMES: string[];\r\n    static TOINT: {\r\n        [key: string]: number;\r\n    };\r\n    static NORMAL: string;\r\n    static MASK: string;\r\n    static LIGHTER: string;\r\n    static fns: any[];\r\n    static targetFns: any[];\r\n    static _init_(gl: WebGLContext): void;\r\n    static BlendNormal(gl: WebGLRenderingContext): void;\r\n    static BlendAddOld(gl: WebGLRenderingContext): void;\r\n    static BlendAdd(gl: WebGLRenderingContext): void;\r\n    static BlendMultiply(gl: WebGLRenderingContext): void;\r\n    static BlendScreen(gl: WebGLRenderingContext): void;\r\n    static BlendOverlay(gl: WebGLRenderingContext): void;\r\n    static BlendLight(gl: WebGLRenderingContext): void;\r\n    static BlendNormalTarget(gl: WebGLRenderingContext): void;\r\n    static BlendAddTargetOld(gl: WebGLRenderingContext): void;\r\n    static BlendAddTarget(gl: WebGLRenderingContext): void;\r\n    static BlendMultiplyTarget(gl: WebGLRenderingContext): void;\r\n    static BlendScreenTarget(gl: WebGLRenderingContext): void;\r\n    static BlendOverlayTarget(gl: WebGLRenderingContext): void;\r\n    static BlendLightTarget(gl: WebGLRenderingContext): void;\r\n    static BlendMask(gl: WebGLRenderingContext): void;\r\n    static BlendDestinationOut(gl: WebGLRenderingContext): void;\r\n}\r\n"
  }
}

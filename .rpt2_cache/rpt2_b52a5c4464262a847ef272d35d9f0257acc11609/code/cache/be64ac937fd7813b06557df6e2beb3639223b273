{
  "code": "import { Config } from \"../../Config\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { VertexArrayObject } from \"../../laya/webgl/VertexArrayObject\";\r\nimport { SystemUtils } from \"./SystemUtils\";\r\nexport class LayaGPU {\r\n    constructor(gl, isWebGL2) {\r\n        this._gl = null;\r\n        this._vaoExt = null;\r\n        this._angleInstancedArrays = null;\r\n        this._isWebGL2 = false;\r\n        this._oesTextureHalfFloat = null;\r\n        this._oes_element_index_uint = null;\r\n        this._oesTextureHalfFloatLinear = null;\r\n        this._oesTextureFloat = null;\r\n        this._extShaderTextureLod = null;\r\n        this._extTextureFilterAnisotropic = null;\r\n        this._compressedTextureS3tc = null;\r\n        this._compressedTexturePvrtc = null;\r\n        this._compressedTextureEtc1 = null;\r\n        this._webgl_depth_texture = null;\r\n        this._extColorBufferFloat = null;\r\n        this._gl = gl;\r\n        this._isWebGL2 = isWebGL2;\r\n        var maxTextureFS = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\r\n        var maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\r\n        if (!isWebGL2) {\r\n            if (!ILaya.Render.isConchApp) {\r\n                VertexArrayObject;\r\n                if (window._setupVertexArrayObject)\r\n                    window._setupVertexArrayObject(gl);\r\n            }\r\n            this._vaoExt = this._getExtension(\"OES_vertex_array_object\");\r\n            this._angleInstancedArrays = this._getExtension(\"ANGLE_instanced_arrays\");\r\n            this._oesTextureHalfFloat = this._getExtension(\"OES_texture_half_float\");\r\n            this._oesTextureHalfFloatLinear = this._getExtension(\"OES_texture_half_float_linear\");\r\n            this._oesTextureFloat = this._getExtension(\"OES_texture_float\");\r\n            this._oes_element_index_uint = this._getExtension(\"OES_element_index_uint\");\r\n            this._extShaderTextureLod = this._getExtension(\"EXT_shader_texture_lod\");\r\n            this._webgl_depth_texture = this._getExtension(\"WEBGL_depth_texture\");\r\n            SystemUtils._shaderCapailityLevel = 30;\r\n        }\r\n        else {\r\n            this._extColorBufferFloat = this._getExtension(\"EXT_color_buffer_float\");\r\n            SystemUtils._shaderCapailityLevel = 35;\r\n        }\r\n        this._extTextureFilterAnisotropic = this._getExtension(\"EXT_texture_filter_anisotropic\");\r\n        this._compressedTextureS3tc = this._getExtension(\"WEBGL_compressed_texture_s3tc\");\r\n        this._compressedTexturePvrtc = this._getExtension(\"WEBGL_compressed_texture_pvrtc\");\r\n        this._compressedTextureEtc1 = this._getExtension(\"WEBGL_compressed_texture_etc1\");\r\n        SystemUtils._maxTextureCount = maxTextureFS;\r\n        SystemUtils._maxTextureSize = maxTextureSize;\r\n    }\r\n    _getExtension(name) {\r\n        var prefixes = LayaGPU._extentionVendorPrefixes;\r\n        for (var k in prefixes) {\r\n            var ext = this._gl.getExtension(prefixes[k] + name);\r\n            if (ext)\r\n                return ext;\r\n        }\r\n        return null;\r\n    }\r\n    createVertexArray() {\r\n        if (this._isWebGL2)\r\n            return this._gl.createVertexArray();\r\n        else\r\n            return this._vaoExt.createVertexArrayOES();\r\n    }\r\n    bindVertexArray(vertexArray) {\r\n        if (this._isWebGL2)\r\n            this._gl.bindVertexArray(vertexArray);\r\n        else\r\n            this._vaoExt.bindVertexArrayOES(vertexArray);\r\n    }\r\n    deleteVertexArray(vertexArray) {\r\n        if (this._isWebGL2)\r\n            this._gl.deleteVertexArray(vertexArray);\r\n        else\r\n            this._vaoExt.deleteVertexArrayOES(vertexArray);\r\n    }\r\n    isVertexArray(vertexArray) {\r\n        if (this._isWebGL2)\r\n            this._gl.isVertexArray(vertexArray);\r\n        else\r\n            this._vaoExt.isVertexArrayOES(vertexArray);\r\n    }\r\n    drawElementsInstanced(mode, count, type, offset, instanceCount) {\r\n        if (this._isWebGL2)\r\n            this._gl.drawElementsInstanced(mode, count, type, offset, instanceCount);\r\n        else\r\n            this._angleInstancedArrays.drawElementsInstancedANGLE(mode, count, type, offset, instanceCount);\r\n    }\r\n    drawArraysInstanced(mode, first, count, instanceCount) {\r\n        if (this._isWebGL2)\r\n            this._gl.drawArraysInstanced(mode, first, count, instanceCount);\r\n        else\r\n            this._angleInstancedArrays.drawArraysInstancedANGLE(mode, first, count, instanceCount);\r\n    }\r\n    vertexAttribDivisor(index, divisor) {\r\n        if (this._isWebGL2)\r\n            this._gl.vertexAttribDivisor(index, divisor);\r\n        else\r\n            this._angleInstancedArrays.vertexAttribDivisorANGLE(index, divisor);\r\n    }\r\n    supportInstance() {\r\n        if ((this._isWebGL2 || this._angleInstancedArrays) && Config.allowGPUInstanceDynamicBatch)\r\n            return true;\r\n        else\r\n            return false;\r\n    }\r\n    supportElementIndexUint32() {\r\n        return this._isWebGL2 || this._oes_element_index_uint ? true : false;\r\n    }\r\n}\r\nLayaGPU._extentionVendorPrefixes = [\"\", \"WEBKIT_\", \"MOZ_\"];\r\n",
  "references": [
    "/Users/zonst/Documents/font2.0/font_game_2.10/libs/Config.ts",
    "/Users/zonst/Documents/font2.0/font_game_2.10/libs/ILaya.ts",
    "/Users/zonst/Documents/font2.0/font_game_2.10/libs/laya/webgl/VertexArrayObject.ts",
    "/Users/zonst/Documents/font2.0/font_game_2.10/libs/laya/webgl/SystemUtils.ts"
  ],
  "dts": {
    "name": "/Users/zonst/Documents/font2.0/font_game_2.10/.rpt2_cache/placeholder/laya/webgl/LayaGPU.d.ts",
    "writeByteOrderMark": false,
    "text": "export declare class LayaGPU {\r\n    private static _extentionVendorPrefixes;\r\n    private _gl;\r\n    private _vaoExt;\r\n    private _angleInstancedArrays;\r\n    _isWebGL2: boolean;\r\n    _oesTextureHalfFloat: any;\r\n    _oes_element_index_uint: any;\r\n    _oesTextureHalfFloatLinear: any;\r\n    _oesTextureFloat: any;\r\n    _extShaderTextureLod: any;\r\n    _extTextureFilterAnisotropic: any;\r\n    _compressedTextureS3tc: any;\r\n    _compressedTexturePvrtc: any;\r\n    _compressedTextureEtc1: any;\r\n    _webgl_depth_texture: any;\r\n    _extColorBufferFloat: any;\r\n    constructor(gl: WebGLRenderingContext, isWebGL2: boolean);\r\n    private _getExtension;\r\n    createVertexArray(): any;\r\n    bindVertexArray(vertexArray: any): void;\r\n    deleteVertexArray(vertexArray: any): void;\r\n    isVertexArray(vertexArray: any): void;\r\n    drawElementsInstanced(mode: number, count: number, type: number, offset: number, instanceCount: number): void;\r\n    drawArraysInstanced(mode: number, first: number, count: number, instanceCount: number): void;\r\n    vertexAttribDivisor(index: number, divisor: number): void;\r\n    supportInstance(): boolean;\r\n    supportElementIndexUint32(): boolean;\r\n}\r\n"
  }
}

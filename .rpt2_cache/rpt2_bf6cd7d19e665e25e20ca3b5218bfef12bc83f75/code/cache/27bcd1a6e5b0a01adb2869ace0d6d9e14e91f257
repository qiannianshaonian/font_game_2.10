{
  "code": "export class Handler {\r\n    constructor(caller = null, method = null, args = null, once = false) {\r\n        this.once = false;\r\n        this._id = 0;\r\n        this.setTo(caller, method, args, once);\r\n    }\r\n    setTo(caller, method, args, once = false) {\r\n        this._id = Handler._gid++;\r\n        this.caller = caller;\r\n        this.method = method;\r\n        this.args = args;\r\n        this.once = once;\r\n        return this;\r\n    }\r\n    run() {\r\n        if (this.method == null)\r\n            return null;\r\n        var id = this._id;\r\n        var result = this.method.apply(this.caller, this.args);\r\n        this._id === id && this.once && this.recover();\r\n        return result;\r\n    }\r\n    runWith(data) {\r\n        if (this.method == null)\r\n            return null;\r\n        var id = this._id;\r\n        if (data == null)\r\n            var result = this.method.apply(this.caller, this.args);\r\n        else if (!this.args && !data.unshift)\r\n            result = this.method.call(this.caller, data);\r\n        else if (this.args)\r\n            result = this.method.apply(this.caller, this.args.concat(data));\r\n        else\r\n            result = this.method.apply(this.caller, data);\r\n        this._id === id && this.once && this.recover();\r\n        return result;\r\n    }\r\n    clear() {\r\n        this.caller = null;\r\n        this.method = null;\r\n        this.args = null;\r\n        return this;\r\n    }\r\n    recover() {\r\n        if (this._id > 0) {\r\n            this._id = 0;\r\n            Handler._pool.push(this.clear());\r\n        }\r\n    }\r\n    static create(caller, method, args = null, once = true) {\r\n        if (Handler._pool.length)\r\n            return Handler._pool.pop().setTo(caller, method, args, once);\r\n        return new Handler(caller, method, args, once);\r\n    }\r\n}\r\nHandler._pool = [];\r\nHandler._gid = 1;\r\n",
  "references": [],
  "dts": {
    "name": "/Users/zonst/Documents/font2.0/font_game_2.10/libs/laya/utils/Handler.d.ts",
    "writeByteOrderMark": false,
    "text": "export declare class Handler {\r\n    protected static _pool: Handler[];\r\n    private static _gid;\r\n    caller: Object | null;\r\n    method: Function | null;\r\n    args: any[] | null;\r\n    once: boolean;\r\n    protected _id: number;\r\n    constructor(caller?: Object | null, method?: Function | null, args?: any[] | null, once?: boolean);\r\n    setTo(caller: any, method: Function | null, args: any[] | null, once?: boolean): Handler;\r\n    run(): any;\r\n    runWith(data: any): any;\r\n    clear(): Handler;\r\n    recover(): void;\r\n    static create(caller: any, method: Function | null, args?: any[] | null, once?: boolean): Handler;\r\n}\r\n"
  }
}

{
  "code": "import { Matrix } from \"../../maths/Matrix\";\r\nimport { ShaderDefines2D } from \"../shader/d2/ShaderDefines2D\";\r\nimport { Value2D } from \"../shader/d2/value/Value2D\";\r\nimport { SubmitTexture } from \"../submit/SubmitTexture\";\r\nimport { RenderInfo } from \"../../renders/RenderInfo\";\r\nexport class CharSubmitCache {\r\n    constructor() {\r\n        this._data = [];\r\n        this._ndata = 0;\r\n        this._clipid = -1;\r\n        this._clipMatrix = new Matrix();\r\n        this._enable = false;\r\n    }\r\n    clear() {\r\n        this._tex = null;\r\n        this._imgId = -1;\r\n        this._ndata = 0;\r\n        this._enable = false;\r\n        this._colorFiler = null;\r\n    }\r\n    destroy() {\r\n        this.clear();\r\n        this._data.length = 0;\r\n        this._data = null;\r\n    }\r\n    add(ctx, tex, imgid, pos, uv, color) {\r\n        if (this._ndata > 0 && (this._tex != tex || this._imgId != imgid ||\r\n            (this._clipid >= 0 && this._clipid != ctx._clipInfoID))) {\r\n            this.submit(ctx);\r\n        }\r\n        this._clipid = ctx._clipInfoID;\r\n        ctx._globalClipMatrix.copyTo(this._clipMatrix);\r\n        this._tex = tex;\r\n        this._imgId = imgid;\r\n        this._colorFiler = ctx._colorFiler;\r\n        this._data[this._ndata] = pos;\r\n        this._data[this._ndata + 1] = uv;\r\n        this._data[this._ndata + 2] = color;\r\n        this._ndata += 3;\r\n    }\r\n    getPos() {\r\n        if (CharSubmitCache.__nPosPool == 0)\r\n            return new Array(8);\r\n        return CharSubmitCache.__posPool[--CharSubmitCache.__nPosPool];\r\n    }\r\n    enable(value, ctx) {\r\n        if (value === this._enable)\r\n            return;\r\n        this._enable = value;\r\n        this._enable || this.submit(ctx);\r\n    }\r\n    submit(ctx) {\r\n        var n = this._ndata;\r\n        if (!n)\r\n            return;\r\n        var _mesh = ctx._mesh;\r\n        var colorFiler = ctx._colorFiler;\r\n        ctx._colorFiler = this._colorFiler;\r\n        var submit = SubmitTexture.create(ctx, _mesh, Value2D.create(ShaderDefines2D.TEXTURE2D, 0));\r\n        ctx._submits[ctx._submits._length++] = ctx._curSubmit = submit;\r\n        submit.shaderValue.textureHost = this._tex;\r\n        submit._key.other = this._imgId;\r\n        ctx._colorFiler = colorFiler;\r\n        ctx._copyClipInfo(submit, this._clipMatrix);\r\n        submit.clipInfoID = this._clipid;\r\n        for (var i = 0; i < n; i += 3) {\r\n            _mesh.addQuad(this._data[i], this._data[i + 1], this._data[i + 2], true);\r\n            CharSubmitCache.__posPool[CharSubmitCache.__nPosPool++] = this._data[i];\r\n        }\r\n        n /= 3;\r\n        submit._numEle += n * 6;\r\n        _mesh.indexNum += n * 6;\r\n        _mesh.vertNum += n * 4;\r\n        ctx._drawCount += n;\r\n        this._ndata = 0;\r\n        if (RenderInfo.loopCount % 100 == 0)\r\n            this._data.length = 0;\r\n    }\r\n}\r\nCharSubmitCache.__posPool = [];\r\nCharSubmitCache.__nPosPool = 0;\r\n",
  "references": [
    "/Users/zonst/Documents/font2.0/font_game_2.10/libs/laya/filters/ColorFilter.ts",
    "/Users/zonst/Documents/font2.0/font_game_2.10/libs/laya/maths/Matrix.ts",
    "/Users/zonst/Documents/font2.0/font_game_2.10/libs/laya/resource/Context.ts",
    "/Users/zonst/Documents/font2.0/font_game_2.10/libs/laya/resource/Texture.ts",
    "/Users/zonst/Documents/font2.0/font_game_2.10/libs/laya/webgl/shader/d2/ShaderDefines2D.ts",
    "/Users/zonst/Documents/font2.0/font_game_2.10/libs/laya/webgl/shader/d2/value/Value2D.ts",
    "/Users/zonst/Documents/font2.0/font_game_2.10/libs/laya/webgl/submit/SubmitTexture.ts",
    "/Users/zonst/Documents/font2.0/font_game_2.10/libs/laya/webgl/utils/MeshQuadTexture.ts",
    "/Users/zonst/Documents/font2.0/font_game_2.10/libs/laya/renders/RenderInfo.ts"
  ],
  "dts": {
    "name": "/Users/zonst/Documents/font2.0/font_game_2.10/libs/laya/webgl/text/CharSubmitCache.d.ts",
    "writeByteOrderMark": false,
    "text": "import { ColorFilter } from \"../../filters/ColorFilter\";\r\nimport { Context } from \"../../resource/Context\";\r\nimport { Texture } from \"../../resource/Texture\";\r\nexport declare class CharSubmitCache {\r\n    private static __posPool;\r\n    private static __nPosPool;\r\n    private _data;\r\n    private _ndata;\r\n    private _tex;\r\n    private _imgId;\r\n    private _clipid;\r\n    private _clipMatrix;\r\n    _enable: boolean;\r\n    _colorFiler: ColorFilter;\r\n    constructor();\r\n    clear(): void;\r\n    destroy(): void;\r\n    add(ctx: Context, tex: Texture, imgid: number, pos: any[], uv: ArrayLike<number>, color: number): void;\r\n    getPos(): any[];\r\n    enable(value: boolean, ctx: Context): void;\r\n    submit(ctx: Context): void;\r\n}\r\n"
  }
}

{
  "code": "import { Widget } from \"./Widget\";\r\nimport { UIEvent } from \"./UIEvent\";\r\nimport { UIUtils } from \"./UIUtils\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nimport { Event } from \"../events/Event\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\";\r\nexport class UIComponent extends Sprite {\r\n    constructor(createChildren = true) {\r\n        super();\r\n        this._anchorX = NaN;\r\n        this._anchorY = NaN;\r\n        this._widget = Widget.EMPTY;\r\n        if (createChildren) {\r\n            this.preinitialize();\r\n            this.createChildren();\r\n            this.initialize();\r\n        }\r\n    }\r\n    destroy(destroyChild = true) {\r\n        super.destroy(destroyChild);\r\n        this._dataSource = null;\r\n        this._tag = null;\r\n        this._toolTip = null;\r\n    }\r\n    preinitialize() {\r\n    }\r\n    createChildren() {\r\n    }\r\n    initialize() {\r\n    }\r\n    get width() {\r\n        return this.get_width();\r\n    }\r\n    get_width() {\r\n        if (this._width)\r\n            return this._width;\r\n        return this.measureWidth();\r\n    }\r\n    measureWidth() {\r\n        var max = 0;\r\n        this.commitMeasure();\r\n        for (var i = this.numChildren - 1; i > -1; i--) {\r\n            var comp = this.getChildAt(i);\r\n            if (comp._visible) {\r\n                max = Math.max(comp._x + comp.width * comp.scaleX, max);\r\n            }\r\n        }\r\n        return max;\r\n    }\r\n    commitMeasure() {\r\n    }\r\n    get height() {\r\n        return this.get_height();\r\n    }\r\n    get_height() {\r\n        if (this._height)\r\n            return this._height;\r\n        return this.measureHeight();\r\n    }\r\n    measureHeight() {\r\n        var max = 0;\r\n        this.commitMeasure();\r\n        for (var i = this.numChildren - 1; i > -1; i--) {\r\n            var comp = this.getChildAt(i);\r\n            if (comp._visible) {\r\n                max = Math.max(comp._y + comp.height * comp.scaleY, max);\r\n            }\r\n        }\r\n        return max;\r\n    }\r\n    get dataSource() {\r\n        return this.get_dataSource();\r\n    }\r\n    get_dataSource() {\r\n        return this._dataSource;\r\n    }\r\n    set dataSource(value) {\r\n        this.set_dataSource(value);\r\n    }\r\n    set_dataSource(value) {\r\n        this._dataSource = value;\r\n        for (var prop in this._dataSource) {\r\n            if (prop in this && !(typeof (this[prop]) == 'function')) {\r\n                this[prop] = this._dataSource[prop];\r\n            }\r\n        }\r\n    }\r\n    get top() {\r\n        return this.get_top();\r\n    }\r\n    get_top() {\r\n        return this._widget.top;\r\n    }\r\n    set top(value) {\r\n        this.set_top(value);\r\n    }\r\n    set_top(value) {\r\n        if (value != this._widget.top) {\r\n            this._getWidget().top = value;\r\n        }\r\n    }\r\n    get bottom() {\r\n        return this.get_bottom();\r\n    }\r\n    get_bottom() {\r\n        return this._widget.bottom;\r\n    }\r\n    set bottom(value) {\r\n        this.set_bottom(value);\r\n    }\r\n    set_bottom(value) {\r\n        if (value != this._widget.bottom) {\r\n            this._getWidget().bottom = value;\r\n        }\r\n    }\r\n    get left() {\r\n        return this._widget.left;\r\n    }\r\n    set left(value) {\r\n        if (value != this._widget.left) {\r\n            this._getWidget().left = value;\r\n        }\r\n    }\r\n    get right() {\r\n        return this._widget.right;\r\n    }\r\n    set right(value) {\r\n        if (value != this._widget.right) {\r\n            this._getWidget().right = value;\r\n        }\r\n    }\r\n    get centerX() {\r\n        return this._widget.centerX;\r\n    }\r\n    set centerX(value) {\r\n        if (value != this._widget.centerX) {\r\n            this._getWidget().centerX = value;\r\n        }\r\n    }\r\n    get centerY() {\r\n        return this._widget.centerY;\r\n    }\r\n    set centerY(value) {\r\n        if (value != this._widget.centerY) {\r\n            this._getWidget().centerY = value;\r\n        }\r\n    }\r\n    _sizeChanged() {\r\n        if (!isNaN(this._anchorX))\r\n            this.pivotX = this.anchorX * this.width;\r\n        if (!isNaN(this._anchorY))\r\n            this.pivotY = this.anchorY * this.height;\r\n        this.event(Event.RESIZE);\r\n        if (this._widget !== Widget.EMPTY)\r\n            this._widget.resetLayout();\r\n    }\r\n    get tag() {\r\n        return this._tag;\r\n    }\r\n    set tag(value) {\r\n        this._tag = value;\r\n    }\r\n    get toolTip() {\r\n        return this._toolTip;\r\n    }\r\n    set toolTip(value) {\r\n        if (this._toolTip != value) {\r\n            this._toolTip = value;\r\n            if (value != null) {\r\n                this.on(Event.MOUSE_OVER, this, this.onMouseOver);\r\n                this.on(Event.MOUSE_OUT, this, this.onMouseOut);\r\n            }\r\n            else {\r\n                this.off(Event.MOUSE_OVER, this, this.onMouseOver);\r\n                this.off(Event.MOUSE_OUT, this, this.onMouseOut);\r\n            }\r\n        }\r\n    }\r\n    onMouseOver(e) {\r\n        ILaya.stage.event(UIEvent.SHOW_TIP, this._toolTip);\r\n    }\r\n    onMouseOut(e) {\r\n        ILaya.stage.event(UIEvent.HIDE_TIP, this._toolTip);\r\n    }\r\n    get gray() {\r\n        return this._gray;\r\n    }\r\n    set gray(value) {\r\n        if (value !== this._gray) {\r\n            this._gray = value;\r\n            UIUtils.gray(this, value);\r\n        }\r\n    }\r\n    get disabled() {\r\n        return this._disabled;\r\n    }\r\n    set disabled(value) {\r\n        if (value !== this._disabled) {\r\n            this.gray = this._disabled = value;\r\n            this.mouseEnabled = !value;\r\n        }\r\n    }\r\n    _getWidget() {\r\n        this._widget === Widget.EMPTY && (this._widget = this.addComponent(Widget));\r\n        return this._widget;\r\n    }\r\n    set scaleX(value) {\r\n        this.set_scaleX(value);\r\n    }\r\n    set_scaleX(value) {\r\n        if (super.get_scaleX() == value)\r\n            return;\r\n        super.set_scaleX(value);\r\n        this.callLater(this._sizeChanged);\r\n    }\r\n    get scaleX() {\r\n        return super.scaleX;\r\n    }\r\n    set scaleY(value) {\r\n        this.set_scaleY(value);\r\n    }\r\n    set_scaleY(value) {\r\n        if (super.get_scaleY() == value)\r\n            return;\r\n        super.set_scaleY(value);\r\n        this.callLater(this._sizeChanged);\r\n    }\r\n    get scaleY() {\r\n        return super.scaleY;\r\n    }\r\n    onCompResize() {\r\n        this._sizeChanged();\r\n    }\r\n    set width(value) {\r\n        this.set_width(value);\r\n    }\r\n    set_width(value) {\r\n        if (super.get_width() == value)\r\n            return;\r\n        super.set_width(value);\r\n        this.callLater(this._sizeChanged);\r\n    }\r\n    set height(value) {\r\n        this.set_height(value);\r\n    }\r\n    set_height(value) {\r\n        if (super.get_height() == value)\r\n            return;\r\n        super.set_height(value);\r\n        this.callLater(this._sizeChanged);\r\n    }\r\n    get anchorX() {\r\n        return this.get_anchorX();\r\n    }\r\n    get_anchorX() {\r\n        return this._anchorX;\r\n    }\r\n    set anchorX(value) {\r\n        this.set_anchorX(value);\r\n    }\r\n    set_anchorX(value) {\r\n        if (this._anchorX != value) {\r\n            this._anchorX = value;\r\n            this.callLater(this._sizeChanged);\r\n        }\r\n    }\r\n    get anchorY() {\r\n        return this.get_anchorY();\r\n    }\r\n    get_anchorY() {\r\n        return this._anchorY;\r\n    }\r\n    set anchorY(value) {\r\n        this.set_anchorY(value);\r\n    }\r\n    set_anchorY(value) {\r\n        if (this._anchorY != value) {\r\n            this._anchorY = value;\r\n            this.callLater(this._sizeChanged);\r\n        }\r\n    }\r\n    _childChanged(child = null) {\r\n        this.callLater(this._sizeChanged);\r\n        super._childChanged(child);\r\n    }\r\n}\r\nILaya.regClass(UIComponent);\r\nClassUtils.regClass(\"laya.ui.UIComponent\", UIComponent);\r\nClassUtils.regClass(\"Laya.UIComponent\", UIComponent);\r\n",
  "references": [
    "F:/ProjectsWorks/font_game_2.10/libs/laya/ui/Widget.ts",
    "F:/ProjectsWorks/font_game_2.10/libs/laya/ui/UIEvent.ts",
    "F:/ProjectsWorks/font_game_2.10/libs/laya/ui/UIUtils.ts",
    "F:/ProjectsWorks/font_game_2.10/libs/laya/display/Node.ts",
    "F:/ProjectsWorks/font_game_2.10/libs/laya/display/Sprite.ts",
    "F:/ProjectsWorks/font_game_2.10/libs/laya/events/Event.ts",
    "F:/ProjectsWorks/font_game_2.10/libs/ILaya.ts",
    "F:/ProjectsWorks/font_game_2.10/libs/laya/utils/ClassUtils.ts"
  ],
  "dts": {
    "name": "F:/ProjectsWorks/font_game_2.10/.rpt2_cache/placeholder/laya/ui/UIComponent.d.ts",
    "writeByteOrderMark": false,
    "text": "import { Widget } from \"./Widget\";\r\nimport { Node } from \"../display/Node\";\r\nimport { Sprite } from \"../display/Sprite\";\r\nexport declare class UIComponent extends Sprite {\r\n    protected _anchorX: number;\r\n    protected _anchorY: number;\r\n    protected _dataSource: any;\r\n    protected _toolTip: any;\r\n    protected _tag: any;\r\n    protected _disabled: boolean;\r\n    protected _gray: boolean;\r\n    protected _widget: Widget;\r\n    constructor(createChildren?: boolean);\r\n    destroy(destroyChild?: boolean): void;\r\n    protected preinitialize(): void;\r\n    protected createChildren(): void;\r\n    protected initialize(): void;\r\n    width: number;\r\n    get_width(): number;\r\n    protected measureWidth(): number;\r\n    protected commitMeasure(): void;\r\n    height: number;\r\n    get_height(): number;\r\n    protected measureHeight(): number;\r\n    dataSource: any;\r\n    get_dataSource(): any;\r\n    set_dataSource(value: any): void;\r\n    top: number;\r\n    get_top(): number;\r\n    set_top(value: number): void;\r\n    bottom: number;\r\n    get_bottom(): number;\r\n    set_bottom(value: number): void;\r\n    left: number;\r\n    right: number;\r\n    centerX: number;\r\n    centerY: number;\r\n    protected _sizeChanged(): void;\r\n    tag: any;\r\n    toolTip: any;\r\n    private onMouseOver;\r\n    private onMouseOut;\r\n    gray: boolean;\r\n    disabled: boolean;\r\n    private _getWidget;\r\n    scaleX: number;\r\n    set_scaleX(value: number): void;\r\n    scaleY: number;\r\n    set_scaleY(value: number): void;\r\n    protected onCompResize(): void;\r\n    set_width(value: number): void;\r\n    set_height(value: number): void;\r\n    anchorX: number;\r\n    get_anchorX(): number;\r\n    set_anchorX(value: number): void;\r\n    anchorY: number;\r\n    get_anchorY(): number;\r\n    set_anchorY(value: number): void;\r\n    protected _childChanged(child?: Node): void;\r\n}\r\n"
  }
}

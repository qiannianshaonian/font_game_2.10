{
  "code": "import { Utils } from \"./Utils\";\r\nexport class ColorUtils {\r\n    constructor(value) {\r\n        this.arrColor = [];\r\n        if (value == null || value == 'none') {\r\n            this.strColor = \"#00000000\";\r\n            this.numColor = 0;\r\n            this.arrColor = [0, 0, 0, 0];\r\n            return;\r\n        }\r\n        var i, len;\r\n        var color;\r\n        if (typeof (value) == 'string') {\r\n            if (value.indexOf(\"rgba(\") >= 0 || value.indexOf(\"rgb(\") >= 0) {\r\n                var tStr = value;\r\n                var beginI, endI;\r\n                beginI = tStr.indexOf(\"(\");\r\n                endI = tStr.indexOf(\")\");\r\n                tStr = tStr.substring(beginI + 1, endI);\r\n                this.arrColor = tStr.split(\",\");\r\n                len = this.arrColor.length;\r\n                for (i = 0; i < len; i++) {\r\n                    this.arrColor[i] = parseFloat(this.arrColor[i]);\r\n                    if (i < 3) {\r\n                        this.arrColor[i] = Math.round(this.arrColor[i]);\r\n                    }\r\n                }\r\n                if (this.arrColor.length == 4) {\r\n                    color = ((this.arrColor[0] * 256 + this.arrColor[1]) * 256 + this.arrColor[2]) * 256 + Math.round(this.arrColor[3] * 255);\r\n                }\r\n                else {\r\n                    color = ((this.arrColor[0] * 256 + this.arrColor[1]) * 256 + this.arrColor[2]);\r\n                }\r\n                this.strColor = value;\r\n            }\r\n            else {\r\n                this.strColor = value;\r\n                value.charAt(0) === '#' && (value = value.substr(1));\r\n                len = value.length;\r\n                if (len === 3 || len === 4) {\r\n                    var temp = \"\";\r\n                    for (i = 0; i < len; i++) {\r\n                        temp += (value[i] + value[i]);\r\n                    }\r\n                    value = temp;\r\n                }\r\n                color = parseInt(value, 16);\r\n            }\r\n        }\r\n        else {\r\n            color = value;\r\n            this.strColor = Utils.toHexColor(color);\r\n        }\r\n        if (this.strColor.indexOf(\"rgba\") >= 0 || this.strColor.length === 9) {\r\n            this.arrColor = [((0xFF000000 & color) >>> 24) / 255, ((0xFF0000 & color) >> 16) / 255, ((0xFF00 & color) >> 8) / 255, (0xFF & color) / 255];\r\n            this.numColor = (0xff000000 & color) >>> 24 | (color & 0xff0000) >> 8 | (color & 0x00ff00) << 8 | ((color & 0xff) << 24);\r\n        }\r\n        else {\r\n            this.arrColor = [((0xFF0000 & color) >> 16) / 255, ((0xFF00 & color) >> 8) / 255, (0xFF & color) / 255, 1];\r\n            this.numColor = 0xff000000 | (color & 0xff0000) >> 16 | (color & 0x00ff00) | (color & 0xff) << 16;\r\n        }\r\n        this.arrColor.__id = ++ColorUtils._COLODID;\r\n    }\r\n    static _initDefault() {\r\n        ColorUtils._DEFAULT = {};\r\n        for (var i in ColorUtils._COLOR_MAP)\r\n            ColorUtils._SAVE[i] = ColorUtils._DEFAULT[i] = new ColorUtils(ColorUtils._COLOR_MAP[i]);\r\n        return ColorUtils._DEFAULT;\r\n    }\r\n    static _initSaveMap() {\r\n        ColorUtils._SAVE_SIZE = 0;\r\n        ColorUtils._SAVE = {};\r\n        for (var i in ColorUtils._DEFAULT)\r\n            ColorUtils._SAVE[i] = ColorUtils._DEFAULT[i];\r\n    }\r\n    static create(value) {\r\n        var key = value + \"\";\r\n        var color = ColorUtils._SAVE[key];\r\n        if (color != null)\r\n            return color;\r\n        if (ColorUtils._SAVE_SIZE < 1000)\r\n            ColorUtils._initSaveMap();\r\n        return ColorUtils._SAVE[key] = new ColorUtils(value);\r\n    }\r\n}\r\nColorUtils._SAVE = {};\r\nColorUtils._SAVE_SIZE = 0;\r\nColorUtils._COLOR_MAP = { \"purple\": \"#800080\", \"orange\": \"#ffa500\", \"white\": '#FFFFFF', \"red\": '#FF0000', \"green\": '#00FF00', \"blue\": '#0000FF', \"black\": '#000000', \"yellow\": '#FFFF00', 'gray': '#808080' };\r\nColorUtils._DEFAULT = ColorUtils._initDefault();\r\nColorUtils._COLODID = 1;\r\n",
  "references": [
    "F:/ProjectsWorks/font_game_2.10/libs/laya/utils/Utils.ts"
  ],
  "dts": {
    "name": "F:/ProjectsWorks/font_game_2.10/.rpt2_cache/placeholder/laya/utils/ColorUtils.d.ts",
    "writeByteOrderMark": false,
    "text": "export declare class ColorUtils {\r\n    static _SAVE: any;\r\n    static _SAVE_SIZE: number;\r\n    private static _COLOR_MAP;\r\n    private static _DEFAULT;\r\n    private static _COLODID;\r\n    arrColor: any[];\r\n    strColor: string;\r\n    numColor: number;\r\n    _drawStyle: any;\r\n    constructor(value: any);\r\n    static _initDefault(): any;\r\n    static _initSaveMap(): void;\r\n    static create(value: any): ColorUtils;\r\n}\r\n"
  }
}

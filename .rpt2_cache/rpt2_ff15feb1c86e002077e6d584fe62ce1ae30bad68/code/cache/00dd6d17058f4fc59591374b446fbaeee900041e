{
  "code": "import { Text } from \"./Text\";\r\nimport { Event } from \"../events/Event\";\r\nimport { Utils } from \"../utils/Utils\";\r\nimport { ILaya } from \"../../ILaya\";\r\nimport { ClassUtils } from \"../utils/ClassUtils\";\r\nexport class Input extends Text {\r\n    constructor() {\r\n        super();\r\n        this._multiline = false;\r\n        this._editable = true;\r\n        this._maxChars = 1E5;\r\n        this._type = \"text\";\r\n        this._prompt = '';\r\n        this._promptColor = \"#A9A9A9\";\r\n        this._originColor = \"#000000\";\r\n        this._content = '';\r\n        Input.IOS_IFRAME = (ILaya.Browser.onIOS && ILaya.Browser.window.top != ILaya.Browser.window.self);\r\n        this._width = 100;\r\n        this._height = 20;\r\n        this.multiline = false;\r\n        this.overflow = Text.SCROLL;\r\n        this.on(Event.MOUSE_DOWN, this, this._onMouseDown);\r\n        this.on(Event.UNDISPLAY, this, this._onUnDisplay);\r\n    }\r\n    static __init__() {\r\n        Input._createInputElement();\r\n        if (ILaya.Browser.onMobile) {\r\n            var isTrue = false;\r\n            if (ILaya.Browser.onMiniGame || ILaya.Browser.onBDMiniGame || ILaya.Browser.onQGMiniGame || ILaya.Browser.onKGMiniGame || ILaya.Browser.onVVMiniGame || ILaya.Browser.onAlipayMiniGame || ILaya.Browser.onQQMiniGame || ILaya.Browser.onBLMiniGame || ILaya.Browser.onTTMiniGame || ILaya.Browser.onHWMiniGame || ILaya.Browser.onTBMiniGame) {\r\n                isTrue = true;\r\n            }\r\n            ILaya.Render.canvas.addEventListener(Input.IOS_IFRAME ? (isTrue ? \"touchend\" : \"click\") : \"touchend\", Input._popupInputMethod);\r\n        }\r\n    }\r\n    static _popupInputMethod(e) {\r\n        if (!Input.isInputting)\r\n            return;\r\n        var input = Input.inputElement;\r\n        input.focus();\r\n    }\r\n    static _createInputElement() {\r\n        Input._initInput(Input.area = ILaya.Browser.createElement(\"textarea\"));\r\n        Input._initInput(Input.input = ILaya.Browser.createElement(\"input\"));\r\n        Input.inputContainer = ILaya.Browser.createElement(\"div\");\r\n        Input.inputContainer.style.position = \"absolute\";\r\n        Input.inputContainer.style.zIndex = 1E5;\r\n        ILaya.Browser.container.appendChild(Input.inputContainer);\r\n        Input.inputContainer.setPos = function (x, y) {\r\n            Input.inputContainer.style.left = x + 'px';\r\n            Input.inputContainer.style.top = y + 'px';\r\n        };\r\n    }\r\n    static _initInput(input) {\r\n        var style = input.style;\r\n        style.cssText = \"position:absolute;overflow:hidden;resize:none;transform-origin:0 0;-webkit-transform-origin:0 0;-moz-transform-origin:0 0;-o-transform-origin:0 0;\";\r\n        style.resize = 'none';\r\n        style.backgroundColor = 'transparent';\r\n        style.border = 'none';\r\n        style.outline = 'none';\r\n        style.zIndex = 1;\r\n        input.addEventListener('input', Input._processInputting);\r\n        input.addEventListener('mousemove', Input._stopEvent);\r\n        input.addEventListener('mousedown', Input._stopEvent);\r\n        input.addEventListener('touchmove', Input._stopEvent);\r\n        input.setFontFace = function (fontFace) { input.style.fontFamily = fontFace; };\r\n        if (!ILaya.Render.isConchApp) {\r\n            input.setColor = function (color) { input.style.color = color; };\r\n            input.setFontSize = function (fontSize) { input.style.fontSize = fontSize + 'px'; };\r\n        }\r\n    }\r\n    static _processInputting(e) {\r\n        var input = Input.inputElement.target;\r\n        if (!input)\r\n            return;\r\n        var value = Input.inputElement.value;\r\n        if (input._restrictPattern) {\r\n            value = value.replace(/\\u2006|\\x27/g, \"\");\r\n            if (input._restrictPattern.test(value)) {\r\n                value = value.replace(input._restrictPattern, \"\");\r\n                Input.inputElement.value = value;\r\n            }\r\n        }\r\n        input._text = value;\r\n        input.event(Event.INPUT);\r\n    }\r\n    static _stopEvent(e) {\r\n        if (e.type == 'touchmove')\r\n            e.preventDefault();\r\n        e.stopPropagation && e.stopPropagation();\r\n    }\r\n    setSelection(startIndex, endIndex) {\r\n        this.focus = true;\r\n        Input.inputElement.selectionStart = startIndex;\r\n        Input.inputElement.selectionEnd = endIndex;\r\n    }\r\n    get multiline() {\r\n        return this._multiline;\r\n    }\r\n    set multiline(value) {\r\n        this._multiline = value;\r\n        this.valign = value ? \"top\" : \"middle\";\r\n    }\r\n    get nativeInput() {\r\n        return this._multiline ? Input.area : Input.input;\r\n    }\r\n    _onUnDisplay(e = null) {\r\n        this.focus = false;\r\n    }\r\n    _onMouseDown(e) {\r\n        this.focus = true;\r\n    }\r\n    _syncInputTransform() {\r\n        var inputElement = this.nativeInput;\r\n        var transform = Utils.getTransformRelativeToWindow(this, this.padding[3], this.padding[0]);\r\n        var inputWid = this._width - this.padding[1] - this.padding[3];\r\n        var inputHei = this._height - this.padding[0] - this.padding[2];\r\n        if (ILaya.Render.isConchApp) {\r\n            inputElement.setScale(transform.scaleX, transform.scaleY);\r\n            inputElement.setSize(inputWid, inputHei);\r\n            inputElement.setPos(transform.x, transform.y);\r\n        }\r\n        else {\r\n            Input.inputContainer.style.transform = Input.inputContainer.style.webkitTransform = \"scale(\" + transform.scaleX + \",\" + transform.scaleY + \") rotate(\" + (ILaya.stage.canvasDegree) + \"deg)\";\r\n            inputElement.style.width = inputWid + 'px';\r\n            inputElement.style.height = inputHei + 'px';\r\n            Input.inputContainer.style.left = transform.x + 'px';\r\n            Input.inputContainer.style.top = transform.y + 'px';\r\n        }\r\n    }\r\n    select() {\r\n        this.nativeInput.select();\r\n    }\r\n    get focus() {\r\n        return this._focus;\r\n    }\r\n    set focus(value) {\r\n        var input = this.nativeInput;\r\n        if (this._focus !== value) {\r\n            if (value) {\r\n                if (input.target) {\r\n                    input.target._focusOut();\r\n                }\r\n                else {\r\n                    this._setInputMethod();\r\n                }\r\n                input.target = this;\r\n                this._focusIn();\r\n            }\r\n            else {\r\n                input.target = null;\r\n                this._focusOut();\r\n                ILaya.Browser.document.body.scrollTop = 0;\r\n                input.blur();\r\n                if (ILaya.Render.isConchApp)\r\n                    input.setPos(-10000, -10000);\r\n                else if (Input.inputContainer.contains(input))\r\n                    Input.inputContainer.removeChild(input);\r\n            }\r\n        }\r\n    }\r\n    _setInputMethod() {\r\n        Input.input.parentElement && (Input.inputContainer.removeChild(Input.input));\r\n        Input.area.parentElement && (Input.inputContainer.removeChild(Input.area));\r\n        Input.inputElement = (this._multiline ? Input.area : Input.input);\r\n        Input.inputContainer.appendChild(Input.inputElement);\r\n        if (Text.RightToLeft) {\r\n            Input.inputElement.style.direction = \"rtl\";\r\n        }\r\n    }\r\n    _focusIn() {\r\n        Input.isInputting = true;\r\n        var input = this.nativeInput;\r\n        Input.input && (Input.input.type = this._type);\r\n        this._focus = true;\r\n        var cssStyle = input.style;\r\n        cssStyle.whiteSpace = (this.wordWrap ? \"pre-wrap\" : \"nowrap\");\r\n        this._setPromptColor();\r\n        input.readOnly = !this._editable;\r\n        if (ILaya.Render.isConchApp) {\r\n            input.setType(this._type);\r\n            input.setForbidEdit(!this._editable);\r\n        }\r\n        input.maxLength = this._maxChars;\r\n        var padding = this.padding;\r\n        input.value = this._content;\r\n        input.placeholder = this._prompt;\r\n        ILaya.stage.off(Event.KEY_DOWN, this, this._onKeyDown);\r\n        ILaya.stage.on(Event.KEY_DOWN, this, this._onKeyDown);\r\n        ILaya.stage.focus = this;\r\n        this.event(Event.FOCUS);\r\n        if (ILaya.Browser.onPC)\r\n            input.focus();\r\n        if (!ILaya.Browser.onMiniGame && !ILaya.Browser.onBDMiniGame && !ILaya.Browser.onQGMiniGame && !ILaya.Browser.onKGMiniGame && !ILaya.Browser.onVVMiniGame && !ILaya.Browser.onAlipayMiniGame && !ILaya.Browser.onQQMiniGame && !ILaya.Browser.onBLMiniGame && !ILaya.Browser.onTTMiniGame && !ILaya.Browser.onHWMiniGame && !ILaya.Browser.onTBMiniGame) {\r\n            var temp = this._text;\r\n            this._text = null;\r\n        }\r\n        this.typeset();\r\n        input.setColor(this._originColor);\r\n        input.setFontSize(this.fontSize);\r\n        input.setFontFace(ILaya.Browser.onIPhone ? (Text.fontFamilyMap[this.font] || this.font) : this.font);\r\n        if (ILaya.Render.isConchApp) {\r\n            input.setMultiAble && input.setMultiAble(this._multiline);\r\n        }\r\n        cssStyle.lineHeight = (this.leading + this.fontSize) + \"px\";\r\n        cssStyle.fontStyle = (this.italic ? \"italic\" : \"normal\");\r\n        cssStyle.fontWeight = (this.bold ? \"bold\" : \"normal\");\r\n        cssStyle.textAlign = this.align;\r\n        cssStyle.padding = \"0 0\";\r\n        this._syncInputTransform();\r\n        if (!ILaya.Render.isConchApp && ILaya.Browser.onPC)\r\n            ILaya.systemTimer.frameLoop(1, this, this._syncInputTransform);\r\n    }\r\n    _setPromptColor() {\r\n        Input.promptStyleDOM = ILaya.Browser.getElementById(\"promptStyle\");\r\n        if (!Input.promptStyleDOM) {\r\n            Input.promptStyleDOM = ILaya.Browser.createElement(\"style\");\r\n            Input.promptStyleDOM.setAttribute(\"id\", \"promptStyle\");\r\n            ILaya.Browser.document.head.appendChild(Input.promptStyleDOM);\r\n        }\r\n        Input.promptStyleDOM.innerText = \"input::-webkit-input-placeholder, textarea::-webkit-input-placeholder {\" + \"color:\" + this._promptColor + \"}\" + \"input:-moz-placeholder, textarea:-moz-placeholder {\" + \"color:\" + this._promptColor + \"}\" + \"input::-moz-placeholder, textarea::-moz-placeholder {\" + \"color:\" + this._promptColor + \"}\" + \"input:-ms-input-placeholder, textarea:-ms-input-placeholder {\" + \"color:\" + this._promptColor + \"}\";\r\n    }\r\n    _focusOut() {\r\n        if (!Input.isInputting)\r\n            return;\r\n        Input.isInputting = false;\r\n        this._focus = false;\r\n        this._text = null;\r\n        this._content = this.nativeInput.value;\r\n        if (!this._content) {\r\n            super.set_text(this._prompt);\r\n            super.set_color(this._promptColor);\r\n        }\r\n        else {\r\n            super.set_text(this._content);\r\n            super.set_color(this._originColor);\r\n        }\r\n        ILaya.stage.off(Event.KEY_DOWN, this, this._onKeyDown);\r\n        ILaya.stage.focus = null;\r\n        this.event(Event.BLUR);\r\n        this.event(Event.CHANGE);\r\n        if (ILaya.Render.isConchApp)\r\n            this.nativeInput.blur();\r\n        ILaya.Browser.onPC && ILaya.systemTimer.clear(this, this._syncInputTransform);\r\n    }\r\n    _onKeyDown(e) {\r\n        if (e.keyCode === 13) {\r\n            if (ILaya.Browser.onMobile && !this._multiline)\r\n                this.focus = false;\r\n            this.event(Event.ENTER);\r\n        }\r\n    }\r\n    set text(value) {\r\n        super.set_color(this._originColor);\r\n        value += '';\r\n        if (this._focus) {\r\n            this.nativeInput.value = value || '';\r\n            this.event(Event.CHANGE);\r\n        }\r\n        else {\r\n            if (!this._multiline)\r\n                value = value.replace(/\\r?\\n/g, '');\r\n            this._content = value;\r\n            if (value)\r\n                super.set_text(value);\r\n            else {\r\n                super.set_text(this._prompt);\r\n                super.set_color(this.promptColor);\r\n            }\r\n        }\r\n    }\r\n    get text() {\r\n        if (this._focus)\r\n            return this.nativeInput.value;\r\n        else\r\n            return this._content || \"\";\r\n    }\r\n    changeText(text) {\r\n        this._content = text;\r\n        if (this._focus) {\r\n            this.nativeInput.value = text || '';\r\n            this.event(Event.CHANGE);\r\n        }\r\n        else\r\n            super.changeText(text);\r\n    }\r\n    set color(value) {\r\n        if (this._focus)\r\n            this.nativeInput.setColor(value);\r\n        super.set_color(this._content ? value : this._promptColor);\r\n        this._originColor = value;\r\n    }\r\n    get color() {\r\n        return super.color;\r\n    }\r\n    set bgColor(value) {\r\n        super.set_bgColor(value);\r\n        if (ILaya.Render.isConchApp)\r\n            this.nativeInput.setBgColor(value);\r\n    }\r\n    get bgColor() {\r\n        return super.bgColor;\r\n    }\r\n    get restrict() {\r\n        if (this._restrictPattern) {\r\n            return this._restrictPattern.source;\r\n        }\r\n        return \"\";\r\n    }\r\n    set restrict(pattern) {\r\n        if (pattern) {\r\n            pattern = \"[^\" + pattern + \"]\";\r\n            if (pattern.indexOf(\"^^\") > -1)\r\n                pattern = pattern.replace(\"^^\", \"\");\r\n            this._restrictPattern = new RegExp(pattern, \"g\");\r\n        }\r\n        else\r\n            this._restrictPattern = null;\r\n    }\r\n    set editable(value) {\r\n        this._editable = value;\r\n        if (ILaya.Render.isConchApp) {\r\n            Input.input.setForbidEdit(!value);\r\n        }\r\n    }\r\n    get editable() {\r\n        return this._editable;\r\n    }\r\n    get maxChars() {\r\n        return this._maxChars;\r\n    }\r\n    set maxChars(value) {\r\n        if (value <= 0)\r\n            value = 1E5;\r\n        this._maxChars = value;\r\n    }\r\n    get prompt() {\r\n        return this._prompt;\r\n    }\r\n    set prompt(value) {\r\n        if (!this._text && value)\r\n            super.set_color(this._promptColor);\r\n        this.promptColor = this._promptColor;\r\n        if (this._text)\r\n            super.set_text((this._text == this._prompt) ? value : this._text);\r\n        else\r\n            super.set_text(value);\r\n        this._prompt = Text.langPacks && Text.langPacks[value] ? Text.langPacks[value] : value;\r\n    }\r\n    get promptColor() {\r\n        return this._promptColor;\r\n    }\r\n    set promptColor(value) {\r\n        this._promptColor = value;\r\n        if (!this._content)\r\n            super.set_color(value);\r\n    }\r\n    get type() {\r\n        return this._type;\r\n    }\r\n    set type(value) {\r\n        if (value === \"password\")\r\n            this._getTextStyle().asPassword = true;\r\n        else\r\n            this._getTextStyle().asPassword = false;\r\n        this._type = value;\r\n    }\r\n}\r\nInput.TYPE_TEXT = \"text\";\r\nInput.TYPE_PASSWORD = \"password\";\r\nInput.TYPE_EMAIL = \"email\";\r\nInput.TYPE_URL = \"url\";\r\nInput.TYPE_NUMBER = \"number\";\r\nInput.TYPE_RANGE = \"range\";\r\nInput.TYPE_DATE = \"date\";\r\nInput.TYPE_MONTH = \"month\";\r\nInput.TYPE_WEEK = \"week\";\r\nInput.TYPE_TIME = \"time\";\r\nInput.TYPE_DATE_TIME = \"datetime\";\r\nInput.TYPE_DATE_TIME_LOCAL = \"datetime-local\";\r\nInput.TYPE_SEARCH = \"search\";\r\nInput.IOS_IFRAME = false;\r\nInput.inputHeight = 45;\r\nInput.isInputting = false;\r\nClassUtils.regClass(\"laya.display.Input\", Input);\r\nClassUtils.regClass(\"Laya.Input\", Input);\r\n",
  "references": [
    "F:/ProjectsWorks/font_game_2ceshi/libs/laya/display/Text.ts",
    "F:/ProjectsWorks/font_game_2ceshi/libs/laya/events/Event.ts",
    "F:/ProjectsWorks/font_game_2ceshi/libs/laya/maths/Matrix.ts",
    "F:/ProjectsWorks/font_game_2ceshi/libs/laya/utils/Utils.ts",
    "F:/ProjectsWorks/font_game_2ceshi/libs/ILaya.ts",
    "F:/ProjectsWorks/font_game_2ceshi/libs/laya/utils/ClassUtils.ts",
    "F:/ProjectsWorks/font_game_2ceshi/libs/laya/display/css/TextStyle.ts"
  ],
  "dts": {
    "name": "F:/ProjectsWorks/font_game_2ceshi/.rpt2_cache/placeholder/laya/display/Input.d.ts",
    "writeByteOrderMark": false,
    "text": "import { Text } from \"./Text\";\r\nexport declare class Input extends Text {\r\n    static TYPE_TEXT: string;\r\n    static TYPE_PASSWORD: string;\r\n    static TYPE_EMAIL: string;\r\n    static TYPE_URL: string;\r\n    static TYPE_NUMBER: string;\r\n    static TYPE_RANGE: string;\r\n    static TYPE_DATE: string;\r\n    static TYPE_MONTH: string;\r\n    static TYPE_WEEK: string;\r\n    static TYPE_TIME: string;\r\n    static TYPE_DATE_TIME: string;\r\n    static TYPE_DATE_TIME_LOCAL: string;\r\n    static TYPE_SEARCH: string;\r\n    protected static input: HTMLInputElement;\r\n    protected static area: any;\r\n    protected static inputElement: any;\r\n    protected static inputContainer: any;\r\n    protected static confirmButton: any;\r\n    protected static promptStyleDOM: any;\r\n    protected _focus: boolean;\r\n    protected _multiline: boolean;\r\n    protected _editable: boolean;\r\n    protected _restrictPattern: any;\r\n    protected _maxChars: number;\r\n    private _type;\r\n    private _prompt;\r\n    private _promptColor;\r\n    private _originColor;\r\n    private _content;\r\n    static IOS_IFRAME: boolean;\r\n    private static inputHeight;\r\n    static isInputting: boolean;\r\n    constructor();\r\n    static __init__(): void;\r\n    private static _popupInputMethod;\r\n    private static _createInputElement;\r\n    private static _initInput;\r\n    private static _processInputting;\r\n    private static _stopEvent;\r\n    setSelection(startIndex: number, endIndex: number): void;\r\n    multiline: boolean;\r\n    readonly nativeInput: any;\r\n    private _onUnDisplay;\r\n    private _onMouseDown;\r\n    private static stageMatrix;\r\n    private _syncInputTransform;\r\n    select(): void;\r\n    focus: boolean;\r\n    private _setInputMethod;\r\n    private _focusIn;\r\n    private _setPromptColor;\r\n    private _focusOut;\r\n    private _onKeyDown;\r\n    text: string;\r\n    changeText(text: string): void;\r\n    color: string;\r\n    bgColor: string;\r\n    restrict: string;\r\n    editable: boolean;\r\n    maxChars: number;\r\n    prompt: string;\r\n    promptColor: string;\r\n    type: string;\r\n}\r\n"
  }
}

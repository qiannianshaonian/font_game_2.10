{
  "code": "import { ILaya } from \"../../ILaya\";\r\nimport { Event } from \"../events/Event\";\r\nimport { Browser } from \"../utils/Browser\";\r\nimport { HttpRequest } from \"./HttpRequest\";\r\nimport { Loader } from \"./Loader\";\r\nexport class TTFLoader {\r\n    load(fontPath) {\r\n        this._url = fontPath;\r\n        var tArr = fontPath.toLowerCase().split(\".ttf\")[0].split(\"/\");\r\n        this.fontName = tArr[tArr.length - 1];\r\n        if (ILaya.Render.isConchApp) {\r\n            this._loadConch();\r\n        }\r\n        else if (window.FontFace) {\r\n            this._loadWithFontFace();\r\n        }\r\n        else {\r\n            this._loadWithCSS();\r\n        }\r\n    }\r\n    _loadConch() {\r\n        this._http = new HttpRequest();\r\n        this._http.on(Event.ERROR, this, this._onErr);\r\n        this._http.on(Event.COMPLETE, this, this._onHttpLoaded);\r\n        this._http.send(this._url, null, \"get\", Loader.BUFFER);\r\n    }\r\n    _onHttpLoaded(data = null) {\r\n        window[\"conchTextCanvas\"].setFontFaceFromBuffer(this.fontName, data);\r\n        this._clearHttp();\r\n        this._complete();\r\n    }\r\n    _clearHttp() {\r\n        if (this._http) {\r\n            this._http.off(Event.ERROR, this, this._onErr);\r\n            this._http.off(Event.COMPLETE, this, this._onHttpLoaded);\r\n            this._http = null;\r\n        }\r\n    }\r\n    _onErr() {\r\n        this._clearHttp();\r\n        if (this.err) {\r\n            this.err.runWith(\"fail:\" + this._url);\r\n            this.err = null;\r\n        }\r\n    }\r\n    _complete() {\r\n        ILaya.systemTimer.clear(this, this._complete);\r\n        ILaya.systemTimer.clear(this, this._checkComplete);\r\n        if (this._div && this._div.parentNode) {\r\n            this._div.parentNode.removeChild(this._div);\r\n            this._div = null;\r\n        }\r\n        if (this.complete) {\r\n            this.complete.runWith(this);\r\n            this.complete = null;\r\n        }\r\n    }\r\n    _checkComplete() {\r\n        if (ILaya.Browser.measureText(TTFLoader._testString, this._fontTxt).width != this._txtWidth) {\r\n            this._complete();\r\n        }\r\n    }\r\n    _loadWithFontFace() {\r\n        var fontFace = new window.FontFace(this.fontName, \"url('\" + this._url + \"')\");\r\n        document.fonts.add(fontFace);\r\n        var self = this;\r\n        fontFace.loaded.then((function () {\r\n            self._complete();\r\n        }));\r\n        fontFace.load();\r\n    }\r\n    _createDiv() {\r\n        this._div = Browser.createElement(\"div\");\r\n        this._div.innerHTML = \"laya\";\r\n        var _style = this._div.style;\r\n        _style.fontFamily = this.fontName;\r\n        _style.position = \"absolute\";\r\n        _style.left = \"-100px\";\r\n        _style.top = \"-100px\";\r\n        document.body.appendChild(this._div);\r\n    }\r\n    _loadWithCSS() {\r\n        var fontStyle = Browser.createElement(\"style\");\r\n        fontStyle.type = \"text/css\";\r\n        document.body.appendChild(fontStyle);\r\n        fontStyle.textContent = \"@font-face { font-family:'\" + this.fontName + \"'; src:url('\" + this._url + \"');}\";\r\n        this._fontTxt = \"40px \" + this.fontName;\r\n        this._txtWidth = Browser.measureText(TTFLoader._testString, this._fontTxt).width;\r\n        var self = this;\r\n        fontStyle.onload = function () {\r\n            ILaya.systemTimer.once(10000, self, self._complete);\r\n        };\r\n        ILaya.systemTimer.loop(20, this, this._checkComplete);\r\n        this._createDiv();\r\n    }\r\n}\r\nTTFLoader._testString = \"LayaTTFFont\";\r\n",
  "references": [
    "F:/ProjectsWorks/font_game_2ceshi/libs/ILaya.ts",
    "F:/ProjectsWorks/font_game_2ceshi/libs/laya/events/Event.ts",
    "F:/ProjectsWorks/font_game_2ceshi/libs/laya/utils/Browser.ts",
    "F:/ProjectsWorks/font_game_2ceshi/libs/laya/utils/Handler.ts",
    "F:/ProjectsWorks/font_game_2ceshi/libs/laya/net/HttpRequest.ts",
    "F:/ProjectsWorks/font_game_2ceshi/libs/laya/net/Loader.ts"
  ],
  "dts": {
    "name": "F:/ProjectsWorks/font_game_2ceshi/.rpt2_cache/placeholder/laya/net/TTFLoader.d.ts",
    "writeByteOrderMark": false,
    "text": "import { Handler } from \"../utils/Handler\";\r\nexport declare class TTFLoader {\r\n    private static _testString;\r\n    fontName: string;\r\n    complete: Handler | null;\r\n    err: Handler | null;\r\n    private _fontTxt;\r\n    private _url;\r\n    private _div;\r\n    private _txtWidth;\r\n    private _http;\r\n    load(fontPath: string): void;\r\n    private _loadConch;\r\n    private _onHttpLoaded;\r\n    private _clearHttp;\r\n    private _onErr;\r\n    private _complete;\r\n    private _checkComplete;\r\n    private _loadWithFontFace;\r\n    private _createDiv;\r\n    private _loadWithCSS;\r\n}\r\n"
  }
}

{
  "code": "import { Stat } from \"../../utils/Stat\";\r\nimport { BlendMode } from \"../canvas/BlendMode\";\r\nimport { CONST3D2D } from \"../utils/CONST3D2D\";\r\nimport { WebGLContext } from \"../WebGLContext\";\r\nimport { SubmitBase } from \"./SubmitBase\";\r\nexport class Submit extends SubmitBase {\r\n    constructor(renderType = SubmitBase.TYPE_2D) {\r\n        super(renderType);\r\n    }\r\n    renderSubmit() {\r\n        if (this._numEle === 0 || !this._mesh || this._numEle == 0)\r\n            return 1;\r\n        var _tex = this.shaderValue.textureHost;\r\n        if (_tex) {\r\n            var source = _tex._getSource();\r\n            if (!source)\r\n                return 1;\r\n            this.shaderValue.texture = source;\r\n        }\r\n        var gl = WebGLContext.mainContext;\r\n        this._mesh.useMesh(gl);\r\n        this.shaderValue.upload();\r\n        if (BlendMode.activeBlendFunction !== this._blendFn) {\r\n            WebGLContext.setBlend(gl, true);\r\n            this._blendFn(gl);\r\n            BlendMode.activeBlendFunction = this._blendFn;\r\n        }\r\n        gl.drawElements(gl.TRIANGLES, this._numEle, gl.UNSIGNED_SHORT, this._startIdx);\r\n        Stat.renderBatches++;\r\n        Stat.trianglesFaces += this._numEle / 3;\r\n        return 1;\r\n    }\r\n    releaseRender() {\r\n        if (SubmitBase.RENDERBASE == this)\r\n            return;\r\n        if ((--this._ref) < 1) {\r\n            Submit.POOL[Submit._poolSize++] = this;\r\n            this.shaderValue.release();\r\n            this.shaderValue = null;\r\n            this._mesh = null;\r\n            this._parent && (this._parent.releaseRender(), this._parent = null);\r\n        }\r\n    }\r\n    static create(context, mesh, sv) {\r\n        var o = Submit._poolSize ? Submit.POOL[--Submit._poolSize] : new Submit();\r\n        o._ref = 1;\r\n        o._mesh = mesh;\r\n        o._key.clear();\r\n        o._startIdx = mesh.indexNum * CONST3D2D.BYTES_PIDX;\r\n        o._numEle = 0;\r\n        var blendType = context._nBlendType;\r\n        o._blendFn = context._targets ? BlendMode.targetFns[blendType] : BlendMode.fns[blendType];\r\n        o.shaderValue = sv;\r\n        o.shaderValue.setValue(context._shader2D);\r\n        var filters = context._shader2D.filters;\r\n        filters && o.shaderValue.setFilters(filters);\r\n        return o;\r\n    }\r\n    static createShape(ctx, mesh, numEle, sv) {\r\n        var o = Submit._poolSize ? Submit.POOL[--Submit._poolSize] : (new Submit());\r\n        o._mesh = mesh;\r\n        o._numEle = numEle;\r\n        o._startIdx = mesh.indexNum * 2;\r\n        o._ref = 1;\r\n        o.shaderValue = sv;\r\n        o.shaderValue.setValue(ctx._shader2D);\r\n        var blendType = ctx._nBlendType;\r\n        o._key.blendShader = blendType;\r\n        o._blendFn = ctx._targets ? BlendMode.targetFns[blendType] : BlendMode.fns[blendType];\r\n        return o;\r\n    }\r\n}\r\nSubmit._poolSize = 0;\r\nSubmit.POOL = [];\r\n",
  "references": [
    "F:/ProjectsWorks/font_game_2ceshi/libs/laya/resource/Context.ts",
    "F:/ProjectsWorks/font_game_2ceshi/libs/laya/resource/Texture.ts",
    "F:/ProjectsWorks/font_game_2ceshi/libs/laya/utils/Stat.ts",
    "F:/ProjectsWorks/font_game_2ceshi/libs/laya/webgl/canvas/BlendMode.ts",
    "F:/ProjectsWorks/font_game_2ceshi/libs/laya/webgl/shader/d2/value/Value2D.ts",
    "F:/ProjectsWorks/font_game_2ceshi/libs/laya/webgl/utils/CONST3D2D.ts",
    "F:/ProjectsWorks/font_game_2ceshi/libs/laya/webgl/utils/Mesh2D.ts",
    "F:/ProjectsWorks/font_game_2ceshi/libs/laya/webgl/WebGLContext.ts",
    "F:/ProjectsWorks/font_game_2ceshi/libs/laya/webgl/submit/SubmitBase.ts"
  ],
  "dts": {
    "name": "F:/ProjectsWorks/font_game_2ceshi/.rpt2_cache/placeholder/laya/webgl/submit/Submit.d.ts",
    "writeByteOrderMark": false,
    "text": "import { Context } from \"../../resource/Context\";\r\nimport { Value2D } from \"../shader/d2/value/Value2D\";\r\nimport { Mesh2D } from \"../utils/Mesh2D\";\r\nimport { SubmitBase } from \"./SubmitBase\";\r\nexport declare class Submit extends SubmitBase {\r\n    protected static _poolSize: number;\r\n    protected static POOL: any[];\r\n    constructor(renderType?: number);\r\n    renderSubmit(): number;\r\n    releaseRender(): void;\r\n    static create(context: Context, mesh: Mesh2D, sv: Value2D): Submit;\r\n    static createShape(ctx: Context, mesh: Mesh2D, numEle: number, sv: Value2D): Submit;\r\n}\r\n"
  }
}

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var bigItem_1 = require("./view/bigItem");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("view/bigItem.ts", bigItem_1.default);
    };
    GameConfig.width = 640;
    GameConfig.height = 1136;
    GameConfig.scaleMode = "fixedwidth";
    GameConfig.screenMode = "none";
    GameConfig.alignV = "top";
    GameConfig.alignH = "left";
    GameConfig.startScene = "test/Big.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();

},{"./view/bigItem":5}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var BigRank_1 = require("./view/BigRank");
var Main = /** @class */ (function () {
    function Main() {
        //设置子域
        Laya.isWXOpenDataContext = true;
        Laya.isWXPosMsg = true;
        //根据IDE设置初始化引擎		
        Laya.init(GameConfig_1.default.width, GameConfig_1.default.height);
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        Laya.stage.alignV = GameConfig_1.default.alignV;
        Laya.stage.alignH = GameConfig_1.default.alignH;
        // 关于透传接口，请参考: https://ldc2.layabox.com/doc/?nav=zh-ts-5-0-7
        if (Laya.Browser.onMiniGame)
            wx.onMessage(this.onWXMessage.bind(this));
        else
            Laya.loader.load("res/atlas/test.atlas", Laya.Handler.create(this, this.onComplete));
    }
    Main.prototype.onWXMessage = function (data) {
        if (data.url == null) {
            switch (data.cmd) {
                case "wx.setUserCloudStorage":
                    this._rank.getSelfData(Laya.Handler.create(this, function (score) {
                        if (score < data.data.wxgame.score) {
                            this._rank.setSelfData(data.data);
                        }
                    }));
                    break;
                case "refreshRankList":
                    if (this._rank == null) {
                        return;
                    }
                    this._rank.refresh();
                    break;
            }
        }
        else {
            Laya.loader.load([data.url], Laya.Handler.create(this, this.onComplete));
        }
    };
    Main.prototype.onComplete = function () {
        //初始化rank排行榜
        this._rank = new BigRank_1.default();
        //初始化
        this._rank.init();
    };
    return Main;
}());
//激活启动类
new Main();

},{"./GameConfig":1,"./view/BigRank":4}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var View = Laya.View;
var Scene = Laya.Scene;
var REG = Laya.ClassUtils.regClass;
var ui;
(function (ui) {
    var test;
    (function (test) {
        var BigUI = /** @class */ (function (_super) {
            __extends(BigUI, _super);
            function BigUI() {
                return _super.call(this) || this;
            }
            BigUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(BigUI.uiView);
            };
            BigUI.uiView = { "type": "Scene", "props": { "width": 610, "height": 757 }, "compId": 2, "child": [{ "type": "Sprite", "props": { "y": 0, "x": 0, "texture": "test/2.png" }, "compId": 4 }, { "type": "List", "props": { "y": 104, "x": 13, "width": 585, "var": "_list", "vScrollBarSkin": " ", "spaceY": 20, "repeatX": 1, "height": 629, "elasticEnabled": true }, "compId": 3, "child": [{ "type": "bigItem", "props": { "runtime": "view/bigItem.ts", "renderType": "render" }, "compId": 5 }] }], "loadList": ["test/2.png"], "loadList3D": [] };
            return BigUI;
        }(Scene));
        test.BigUI = BigUI;
        REG("ui.test.BigUI", BigUI);
        var BigItemUI = /** @class */ (function (_super) {
            __extends(BigItemUI, _super);
            function BigItemUI() {
                return _super.call(this) || this;
            }
            BigItemUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(BigItemUI.uiView);
            };
            BigItemUI.uiView = { "type": "View", "props": { "width": 580, "height": 100 }, "compId": 2, "child": [{ "type": "Sprite", "props": { "y": 0, "x": 0, "width": 575, "texture": "test/3.png", "height": 99 }, "compId": 7 }, { "type": "Image", "props": { "y": 6, "x": 22, "width": 80, "var": "img_head", "skin": "test/4.png", "height": 80 }, "compId": 3, "child": [{ "type": "Sprite", "props": { "y": -1, "x": -1, "width": 82, "texture": "test/c1.png", "renderType": "mask", "height": 82 }, "compId": 10 }] }, { "type": "Label", "props": { "y": 38.5, "x": 136, "width": 259, "var": "text_name", "text": "名字", "overflow": "scroll", "height": 24, "fontSize": 20, "font": "Microsoft YaHei", "color": "#ffffff", "align": "center" }, "compId": 4 }, { "type": "Label", "props": { "y": 42.5, "x": 496, "var": "text_score", "text": "分数", "fontSize": 20, "color": "#ffffff", "align": "center" }, "compId": 5 }], "loadList": ["test/3.png", "test/4.png", "test/c1.png"], "loadList3D": [] };
            return BigItemUI;
        }(View));
        test.BigItemUI = BigItemUI;
        REG("ui.test.BigItemUI", BigItemUI);
    })(test = ui.test || (ui.test = {}));
})(ui = exports.ui || (exports.ui = {}));

},{}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../ui/layaMaxUI");
var BigRank = /** @class */ (function (_super) {
    __extends(BigRank, _super);
    function BigRank() {
        var _this = _super.call(this) || this;
        /**获取好友排行榜时的key */
        _this._key = 'test10086';
        /**list初始化使用的数据 */
        _this.arr = [
            { index: 1, avatarIP: 'test/4.png', UserName: "测试用户1", RankValue: 100 },
            { index: 2, avatarIP: 'test/4.png', UserName: "测试用户2", RankValue: 75 },
            { index: 3, avatarIP: 'test/4.png', UserName: "测试用户3", RankValue: 50 },
            { index: 4, avatarIP: 'test/4.png', UserName: "测试用户4", RankValue: 25 }
        ];
        return _this;
    }
    /**
     * 初始化
     */
    BigRank.prototype.init = function () {
        Laya.stage.addChild(this);
        this._list.vScrollBarSkin = "";
    };
    BigRank.prototype.refresh = function () {
        if (Laya.Browser.onMiniGame) {
            // 直接展示数据
            this.getFriendData();
        }
        else {
            this.setlist(this.arr);
        }
    };
    /**
     * 获取好友排行
     */
    BigRank.prototype.getFriendData = function () {
        var _$this = this;
        wx.getFriendCloudStorage({
            keyList: [this._key],
            success: function (res) {
                //关于拿到的数据详细情况可以产看微信文档
                //https://developers.weixin.qq.com/minigame/dev/api/UserGameData.html
                var listData;
                var obj;
                var kv;
                var arr = [];
                console.log('-----------------getFriendCloudStorage------------');
                if (res.data) {
                    for (var i = 0; i < res.data.length; i++) {
                        obj = res.data[i];
                        if (!(obj.KVDataList.length))
                            continue;
                        //拉取数据是，使用了多少个key- KVDataList的数组就有多少
                        //更详细的KVData可以查看微信文档:https://developers.weixin.qq.com/minigame/dev/api/KVData.html
                        kv = obj.KVDataList[0];
                        if (kv.key != _$this._key)
                            continue;
                        kv = JSON.parse(kv.value);
                        listData = {};
                        listData.avatarIP = obj.avatarUrl;
                        listData.UserName = obj.nickname;
                        listData.openID = obj.openid;
                        listData.RankValue = kv.wxgame.value1.score;
                        listData.update_time = kv.wxgame.update_time;
                        arr.push(listData);
                    }
                    //根据RankValue排序
                    arr = arr.sort(function (a, b) {
                        return b.RankValue - a.RankValue;
                    });
                    //增加一个用于查看的index排名
                    for (var i = 0; i < arr.length; i++) {
                        arr[i].index = i + 1;
                    }
                    //设置数组
                    _$this.setlist(arr);
                }
            },
            fail: function (data) {
                console.log('------------------获取托管数据失败--------------------');
                console.log(data);
            }
        });
    };
    /**
     * 上报自己的数据
     * @param data 上报数据
     */
    BigRank.prototype.setSelfData = function (data) {
        var kvDataList = [];
        var obj = {};
        obj.wxgame = {};
        obj.wxgame.value1 = data;
        obj.wxgame.update_time = Laya.Browser.now();
        kvDataList.push({ "key": this._key, "value": JSON.stringify(obj) });
        wx.setUserCloudStorage({
            KVDataList: kvDataList,
            success: function (e) {
                console.log('-----success:' + JSON.stringify(e));
            },
            fail: function (e) {
                console.log('-----fail:' + JSON.stringify(e));
            },
            complete: function (e) {
                console.log('-----complete:' + JSON.stringify(e));
            }
        });
    };
    BigRank.prototype.getSelfData = function (handler) {
        var keyList = [];
        var obj = {};
        keyList.push(this._key);
        wx["getUserCloudStorage"]({
            keyList: keyList,
            success: function (e) {
                console.log('-----success:' + JSON.stringify(e));
                if (e["KVDataList"].length > 0) {
                    var data = JSON.parse(e["KVDataList"][0].value);
                    // let data = JSON.parse(e["KVDataList"][0].value.wxgame.score)
                    handler.runWith(data.wxgame.value1.score);
                }
                else {
                    handler.runWith(0);
                }
            },
            fail: function (e) {
                console.log('-----fail:' + JSON.stringify(e));
            },
            complete: function (e) {
                console.log('-----complete:' + JSON.stringify(e));
            }
        });
    };
    /**
     * 设置list arr
     * @param arr 赋值用的arr
     */
    BigRank.prototype.setlist = function (arr) {
        this._list.array = arr;
        this._list.refresh();
    };
    return BigRank;
}(layaMaxUI_1.ui.test.BigUI));
exports.default = BigRank;

},{"../ui/layaMaxUI":3}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var layaMaxUI_1 = require("../ui/layaMaxUI");
var BigItem = /** @class */ (function (_super) {
    __extends(BigItem, _super);
    function BigItem() {
        return _super.call(this) || this;
    }
    Object.defineProperty(BigItem.prototype, "dataSource", {
        set: function (value) {
            if (!value)
                return;
            this.img_head.skin = value.avatarIP;
            this.text_name.text = value.UserName;
            this.text_score.text = value.RankValue;
        },
        enumerable: true,
        configurable: true
    });
    return BigItem;
}(layaMaxUI_1.ui.test.BigItemUI));
exports.default = BigItem;

},{"../ui/layaMaxUI":3}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL0xheWEvTGF5YUFpcklERV8yLjEuMGJldGExLmFwcC9Db250ZW50cy9SZXNvdXJjZXMvYXBwL25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvR2FtZUNvbmZpZy50cyIsInNyYy9NYWluLnRzIiwic3JjL3VpL2xheWFNYXhVSS50cyIsInNyYy92aWV3L0JpZ1JhbmsudHMiLCJzcmMvdmlldy9iaWdJdGVtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ1ZBLGdHQUFnRztBQUNoRywwQ0FBb0M7QUFDcEM7O0VBRUU7QUFDRjtJQWFJO0lBQWMsQ0FBQztJQUNSLGVBQUksR0FBWDtRQUNJLElBQUksR0FBRyxHQUFhLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDO1FBQzdDLEdBQUcsQ0FBQyxpQkFBaUIsRUFBQyxpQkFBTyxDQUFDLENBQUM7SUFDbkMsQ0FBQztJQWhCTSxnQkFBSyxHQUFRLEdBQUcsQ0FBQztJQUNqQixpQkFBTSxHQUFRLElBQUksQ0FBQztJQUNuQixvQkFBUyxHQUFRLFlBQVksQ0FBQztJQUM5QixxQkFBVSxHQUFRLE1BQU0sQ0FBQztJQUN6QixpQkFBTSxHQUFRLEtBQUssQ0FBQztJQUNwQixpQkFBTSxHQUFRLE1BQU0sQ0FBQztJQUNyQixxQkFBVSxHQUFLLGdCQUFnQixDQUFDO0lBQ2hDLG9CQUFTLEdBQVEsRUFBRSxDQUFDO0lBQ3BCLGdCQUFLLEdBQVMsS0FBSyxDQUFDO0lBQ3BCLGVBQUksR0FBUyxLQUFLLENBQUM7SUFDbkIsdUJBQVksR0FBUyxLQUFLLENBQUM7SUFDM0IsNEJBQWlCLEdBQVMsSUFBSSxDQUFDO0lBTTFDLGlCQUFDO0NBbEJELEFBa0JDLElBQUE7a0JBbEJvQixVQUFVO0FBbUIvQixVQUFVLENBQUMsSUFBSSxFQUFFLENBQUM7Ozs7O0FDeEJsQiwyQ0FBc0M7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RCxHQUFHLENBQUMsZUFBZSxFQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzNCO1lBQStCLDZCQUFJO1lBSy9CO3VCQUFlLGlCQUFPO1lBQUEsQ0FBQztZQUN2QixrQ0FBYyxHQUFkO2dCQUNJLGlCQUFNLGNBQWMsV0FBRSxDQUFDO2dCQUN2QixJQUFJLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUN0QyxDQUFDO1lBTGMsZ0JBQU0sR0FBTSxFQUFDLE1BQU0sRUFBQyxNQUFNLEVBQUMsT0FBTyxFQUFDLEVBQUMsT0FBTyxFQUFDLEdBQUcsRUFBQyxRQUFRLEVBQUMsR0FBRyxFQUFDLEVBQUMsUUFBUSxFQUFDLENBQUMsRUFBQyxPQUFPLEVBQUMsQ0FBQyxFQUFDLE1BQU0sRUFBQyxRQUFRLEVBQUMsT0FBTyxFQUFDLEVBQUMsR0FBRyxFQUFDLENBQUMsRUFBQyxHQUFHLEVBQUMsQ0FBQyxFQUFDLE9BQU8sRUFBQyxHQUFHLEVBQUMsU0FBUyxFQUFDLFlBQVksRUFBQyxRQUFRLEVBQUMsRUFBRSxFQUFDLEVBQUMsUUFBUSxFQUFDLENBQUMsRUFBQyxFQUFDLEVBQUMsTUFBTSxFQUFDLE9BQU8sRUFBQyxPQUFPLEVBQUMsRUFBQyxHQUFHLEVBQUMsQ0FBQyxFQUFDLEdBQUcsRUFBQyxFQUFFLEVBQUMsT0FBTyxFQUFDLEVBQUUsRUFBQyxLQUFLLEVBQUMsVUFBVSxFQUFDLE1BQU0sRUFBQyxZQUFZLEVBQUMsUUFBUSxFQUFDLEVBQUUsRUFBQyxFQUFDLFFBQVEsRUFBQyxDQUFDLEVBQUMsT0FBTyxFQUFDLENBQUMsRUFBQyxNQUFNLEVBQUMsUUFBUSxFQUFDLE9BQU8sRUFBQyxFQUFDLEdBQUcsRUFBQyxDQUFDLENBQUMsRUFBQyxHQUFHLEVBQUMsQ0FBQyxDQUFDLEVBQUMsT0FBTyxFQUFDLEVBQUUsRUFBQyxTQUFTLEVBQUMsYUFBYSxFQUFDLFlBQVksRUFBQyxNQUFNLEVBQUMsUUFBUSxFQUFDLEVBQUUsRUFBQyxFQUFDLFFBQVEsRUFBQyxFQUFFLEVBQUMsQ0FBQyxFQUFD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LENBWkEsQUFZQyxDQVpvQyxjQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsR0FZckQiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbInZhciBfX2V4dGVuZHMgPSAodGhpcyAmJiB0aGlzLl9fZXh0ZW5kcykgfHwgKGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XHJcbiAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxyXG4gICAgICAgIGZ1bmN0aW9uIChkLCBiKSB7IGZvciAodmFyIHAgaW4gYikgaWYgKGIuaGFzT3duUHJvcGVydHkocCkpIGRbcF0gPSBiW3BdOyB9O1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uIChkLCBiKSB7XHJcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcclxuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cclxuICAgICAgICBkLnByb3RvdHlwZSA9IGIgPT09IG51bGwgPyBPYmplY3QuY3JlYXRlKGIpIDogKF9fLnByb3RvdHlwZSA9IGIucHJvdG90eXBlLCBuZXcgX18oKSk7XHJcbiAgICB9O1xyXG59KSgpO1xyXG4oZnVuY3Rpb24oKXtmdW5jdGlvbiByKGUsbix0KXtmdW5jdGlvbiBvKGksZil7aWYoIW5baV0pe2lmKCFlW2ldKXt2YXIgYz1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFmJiZjKXJldHVybiBjKGksITApO2lmKHUpcmV0dXJuIHUoaSwhMCk7dmFyIGE9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitpK1wiJ1wiKTt0aHJvdyBhLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsYX12YXIgcD1uW2ldPXtleHBvcnRzOnt9fTtlW2ldWzBdLmNhbGwocC5leHBvcnRzLGZ1bmN0aW9uKHIpe3ZhciBuPWVbaV1bMV1bcl07cmV0dXJuIG8obnx8cil9LHAscC5leHBvcnRzLHIsZSxuLHQpfXJldHVybiBuW2ldLmV4cG9ydHN9Zm9yKHZhciB1PVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsaT0wO2k8dC5sZW5ndGg7aSsrKW8odFtpXSk7cmV0dXJuIG99cmV0dXJuIHJ9KSgpIiwiLyoqVGhpcyBjbGFzcyBpcyBhdXRvbWF0aWNhbGx5IGdlbmVyYXRlZCBieSBMYXlhQWlySURFLCBwbGVhc2UgZG8gbm90IG1ha2UgYW55IG1vZGlmaWNhdGlvbnMuICovXHJcbmltcG9ydCBiaWdJdGVtIGZyb20gXCIuL3ZpZXcvYmlnSXRlbVwiXHJcbi8qXHJcbiog5ri45oiP5Yid5aeL5YyW6YWN572uO1xyXG4qL1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHYW1lQ29uZmlne1xyXG4gICAgc3RhdGljIHdpZHRoOm51bWJlcj02NDA7XHJcbiAgICBzdGF0aWMgaGVpZ2h0Om51bWJlcj0xMTM2O1xyXG4gICAgc3RhdGljIHNjYWxlTW9kZTpzdHJpbmc9XCJmaXhlZHdpZHRoXCI7XHJcbiAgICBzdGF0aWMgc2NyZWVuTW9kZTpzdHJpbmc9XCJub25lXCI7XHJcbiAgICBzdGF0aWMgYWxpZ25WOnN0cmluZz1cInRvcFwiO1xyXG4gICAgc3RhdGljIGFsaWduSDpzdHJpbmc9XCJsZWZ0XCI7XHJcbiAgICBzdGF0aWMgc3RhcnRTY2VuZTphbnk9XCJ0ZXN0L0JpZy5zY2VuZVwiO1xyXG4gICAgc3RhdGljIHNjZW5lUm9vdDpzdHJpbmc9XCJcIjtcclxuICAgIHN0YXRpYyBkZWJ1Zzpib29sZWFuPWZhbHNlO1xyXG4gICAgc3RhdGljIHN0YXQ6Ym9vbGVhbj1mYWxzZTtcclxuICAgIHN0YXRpYyBwaHlzaWNzRGVidWc6Ym9vbGVhbj1mYWxzZTtcclxuICAgIHN0YXRpYyBleHBvcnRTY2VuZVRvSnNvbjpib29sZWFuPXRydWU7XHJcbiAgICBjb25zdHJ1Y3Rvcigpe31cclxuICAgIHN0YXRpYyBpbml0KCl7XHJcbiAgICAgICAgdmFyIHJlZzogRnVuY3Rpb24gPSBMYXlhLkNsYXNzVXRpbHMucmVnQ2xhc3M7XHJcbiAgICAgICAgcmVnKFwidmlldy9iaWdJdGVtLnRzXCIsYmlnSXRlbSk7XHJcbiAgICB9XHJcbn1cclxuR2FtZUNvbmZpZy5pbml0KCk7IiwiaW1wb3J0IEdhbWVDb25maWcgZnJvbSBcIi4vR2FtZUNvbmZpZ1wiO1xyXG5pbXBvcnQgQmlnUmFuayBmcm9tIFwiLi92aWV3L0JpZ1JhbmtcIjtcclxuY2xhc3MgTWFpbiB7XHJcblx0Y29uc3RydWN0b3IoKSB7XHJcblx0XHQgLy/orr7nva7lrZDln59cclxuXHRcdExheWEuaXNXWE9wZW5EYXRhQ29udGV4dCA9IHRydWU7XHJcblx0XHRMYXlhLmlzV1hQb3NNc2cgPSB0cnVlO1xyXG5cdFx0Ly/moLnmja5JREXorr7nva7liJ3lp4vljJblvJXmk45cdFx0XHJcblx0XHRMYXlhLmluaXQoR2FtZUNvbmZpZy53aWR0aCwgR2FtZUNvbmZpZy5oZWlnaHQpO1xyXG5cdFx0TGF5YS5zdGFnZS5zY2FsZU1vZGUgPSBHYW1lQ29uZmlnLnNjYWxlTW9kZTtcclxuXHRcdExheWEuc3RhZ2Uuc2NyZWVuTW9kZSA9IEdhbWVDb25maWcuc2NyZWVuTW9kZTtcclxuXHRcdExheWEuc3RhZ2UuYWxpZ25WID0gR2FtZUNvbmZpZy5hbGlnblY7XHJcblx0XHRMYXlhLnN0YWdlLmFsaWduSCA9IEdhbWVDb25maWcuYWxpZ25IO1xyXG5cdFx0Ly8g5YWz5LqO6YCP5Lyg5o6l5Y+j77yM6K+35Y+C6ICDOiBodHRwczovL2xkYzIubGF5YWJveC5jb20vZG9jLz9uYXY9emgtdHMtNS0wLTdcclxuXHRcdGlmKExheWEuQnJvd3Nlci5vbk1pbmlHYW1lKVxyXG5cdFx0XHR3eC5vbk1lc3NhZ2UodGhpcy5vbldYTWVzc2FnZS5iaW5kKHRoaXMpKTtcclxuXHRcdGVsc2VcclxuXHRcdFx0TGF5YS5sb2FkZXIubG9hZChcInJlcy9hdGxhcy90ZXN0LmF0bGFzXCIsTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLHRoaXMub25Db21wbGV0ZSkpO1xyXG5cdFx0XHRcdFxyXG5cdH1cclxuXHJcblx0cHJpdmF0ZSBvbldYTWVzc2FnZShkYXRhIDogYW55KSA6IHZvaWR7XHJcblx0XHRpZihkYXRhLnVybCA9PSBudWxsKVxyXG5cdFx0e1xyXG5cdFx0XHRzd2l0Y2goZGF0YS5jbWQpXHJcblx0XHRcdHtcclxuXHRcdFx0XHRjYXNlIFwid3guc2V0VXNlckNsb3VkU3RvcmFnZVwiOlxyXG5cdFx0XHRcdFx0dGhpcy5fcmFuay5nZXRTZWxmRGF0YShMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsZnVuY3Rpb24oc2NvcmUgOiBhbnkpIDp2b2lke1xyXG5cdFx0XHRcdFx0XHRpZihzY29yZTwgZGF0YS5kYXRhLnd4Z2FtZS5zY29yZSlcclxuXHRcdFx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0XHRcdHRoaXMuX3Jhbmsuc2V0U2VsZkRhdGEoZGF0YS5kYXRhKTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fSkpXHJcblx0XHRcdFx0XHRicmVhaztcclxuXHRcdFx0XHRjYXNlIFwicmVmcmVzaFJhbmtMaXN0XCI6XHJcblx0XHRcdFx0XHRpZih0aGlzLl9yYW5rID09IG51bGwpXHJcblx0XHRcdFx0XHR7XHJcblx0XHRcdFx0XHRcdHJldHVybjtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdHRoaXMuX3JhbmsucmVmcmVzaCgpO1xyXG5cdFx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHRcdGVsc2UgXHJcblx0XHR7XHJcblx0XHRcdExheWEubG9hZGVyLmxvYWQoW2RhdGEudXJsXSxMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsdGhpcy5vbkNvbXBsZXRlKSk7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRwcml2YXRlIF9yYW5rIDogQmlnUmFuaztcclxuXHJcblx0b25Db21wbGV0ZSgpOiB2b2lkIHtcclxuXHRcdC8v5Yid5aeL5YyWcmFua+aOkuihjOamnFxyXG5cdFx0dGhpcy5fcmFuayA9IG5ldyBCaWdSYW5rKCk7XHJcblx0XHQvL+WIneWni+WMllxyXG5cdFx0dGhpcy5fcmFuay5pbml0KCk7XHJcblx0fVxyXG59XHJcbi8v5r+A5rS75ZCv5Yqo57G7XHJcbm5ldyBNYWluKCk7XHJcbiIsIi8qKlRoaXMgY2xhc3MgaXMgYXV0b21hdGljYWxseSBnZW5lcmF0ZWQgYnkgTGF5YUFpcklERSwgcGxlYXNlIGRvIG5vdCBtYWtlIGFueSBtb2RpZmljYXRpb25zLiAqL1xuaW1wb3J0IFZpZXc9TGF5YS5WaWV3O1xyXG5pbXBvcnQgRGlhbG9nPUxheWEuRGlhbG9nO1xyXG5pbXBvcnQgU2NlbmU9TGF5YS5TY2VuZTtcbnZhciBSRUc6IEZ1bmN0aW9uID0gTGF5YS5DbGFzc1V0aWxzLnJlZ0NsYXNzO1xuZXhwb3J0IG1vZHVsZSB1aS50ZXN0IHtcclxuICAgIGV4cG9ydCBjbGFzcyBCaWdVSSBleHRlbmRzIFNjZW5lIHtcclxuXHRcdHB1YmxpYyBfbGlzdDpMYXlhLkxpc3Q7XG4gICAgICAgIHB1YmxpYyBzdGF0aWMgIHVpVmlldzphbnkgPXtcInR5cGVcIjpcIlNjZW5lXCIsXCJwcm9wc1wiOntcIndpZHRoXCI6NjEwLFwiaGVpZ2h0XCI6NzU3fSxcImNvbXBJZFwiOjIsXCJjaGlsZFwiOlt7XCJ0eXBlXCI6XCJTcHJpdGVcIixcInByb3BzXCI6e1wieVwiOjAsXCJ4XCI6MCxcInRleHR1cmVcIjpcInRlc3QvMi5wbmdcIn0sXCJjb21wSWRcIjo0fSx7XCJ0eXBlXCI6XCJMaXN0XCIsXCJwcm9wc1wiOntcInlcIjoxMDQsXCJ4XCI6MTMsXCJ3aWR0aFwiOjU4NSxcInZhclwiOlwiX2xpc3RcIixcInZTY3JvbGxCYXJTa2luXCI6XCIgXCIsXCJzcGFjZVlcIjoyMCxcInJlcGVhdFhcIjoxLFwiaGVpZ2h0XCI6NjI5LFwiZWxhc3RpY0VuYWJsZWRcIjp0cnVlfSxcImNvbXBJZFwiOjMsXCJjaGlsZFwiOlt7XCJ0eXBlXCI6XCJiaWdJdGVtXCIsXCJwcm9wc1wiOntcInJ1bnRpbWVcIjpcInZpZXcvYmlnSXRlbS50c1wiLFwicmVuZGVyVHlwZVwiOlwicmVuZGVyXCJ9LFwiY29tcElkXCI6NX1dfV0sXCJsb2FkTGlzdFwiOltcInRlc3QvMi5wbmdcIl0sXCJsb2FkTGlzdDNEXCI6W119O1xyXG4gICAgICAgIGNvbnN0cnVjdG9yKCl7IHN1cGVyKCl9XHJcbiAgICAgICAgY3JlYXRlQ2hpbGRyZW4oKTp2b2lkIHtcclxuICAgICAgICAgICAgc3VwZXIuY3JlYXRlQ2hpbGRyZW4oKTtcclxuICAgICAgICAgICAgdGhpcy5jcmVhdGVWaWV3KEJpZ1VJLnVpVmlldyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgUkVHKFwidWkudGVzdC5CaWdVSVwiLEJpZ1VJKTtcclxuICAgIGV4cG9ydCBjbGFzcyBCaWdJdGVtVUkgZXh0ZW5kcyBWaWV3IHtcclxuXHRcdHB1YmxpYyBpbWdfaGVhZDpMYXlhLkltYWdlO1xuXHRcdHB1YmxpYyB0ZXh0X25hbWU6TGF5YS5MYWJlbDtcblx0XHRwdWJsaWMgdGV4dF9zY29yZTpMYXlhLkxhYmVsO1xuICAgICAgICBwdWJsaWMgc3RhdGljICB1aVZpZXc6YW55ID17XCJ0eXBlXCI6XCJWaWV3XCIsXCJwcm9wc1wiOntcIndpZHRoXCI6NTgwLFwiaGVpZ2h0XCI6MTAwfSxcImNvbXBJZFwiOjIsXCJjaGlsZFwiOlt7XCJ0eXBlXCI6XCJTcHJpdGVcIixcInByb3BzXCI6e1wieVwiOjAsXCJ4XCI6MCxcIndpZHRoXCI6NTc1LFwidGV4dHVyZVwiOlwidGVzdC8zLnBuZ1wiLFwiaGVpZ2h0XCI6OTl9LFwiY29tcElkXCI6N30se1widHlwZVwiOlwiSW1hZ2VcIixcInByb3BzXCI6e1wieVwiOjYsXCJ4XCI6MjIsXCJ3aWR0aFwiOjgwLFwidmFyXCI6XCJpbWdfaGVhZFwiLFwic2tpblwiOlwidGVzdC80LnBuZ1wiLFwiaGVpZ2h0XCI6ODB9LFwiY29tcElkXCI6MyxcImNoaWxkXCI6W3tcInR5cGVcIjpcIlNwcml0ZVwiLFwicHJvcHNcIjp7XCJ5XCI6LTEsXCJ4XCI6LTEsXCJ3aWR0aFwiOjgyLFwidGV4dHVyZVwiOlwidGVzdC9jMS5wbmdcIixcInJlbmRlclR5cGVcIjpcIm1hc2tcIixcImhlaWdodFwiOjgyfSxcImNvbXBJZFwiOjEwfV19LHtcInR5cGVcIjpcIkxhYmVsXCIsXCJwcm9wc1wiOntcInlcIjozOC41LFwieFwiOjEzNixcIndpZHRoXCI6MjU5LFwidmFyXCI6XCJ0ZXh0X25hbWVcIixcInRleHRcIjpcIuWQjeWtl1wiLFwib3ZlcmZsb3dcIjpcInNjcm9sbFwiLFwiaGVpZ2h0XCI6MjQsXCJmb250U2l6ZVwiOjIwLFwiZm9udFwiOlwiTWljcm9zb2Z0IFlhSGVpXCIsXCJjb2xvclwiOlwiI2ZmZmZmZlwiLFwiYWxpZ25cIjpcImNlbnRlclwifSxcImNvbXBJZFwiOjR9LHtcInR5cGVcIjpcIkxhYmVsXCIsXCJwcm9wc1wiOntcInlcIjo0Mi41LFwieFwiOjQ5NixcInZhclwiOlwidGV4dF9zY29yZVwiLFwidGV4dFwiOlwi5YiG5pWwXCIsXCJmb250U2l6ZVwiOjIwLFwiY29sb3JcIjpcIiNmZmZmZmZcIixcImFsaWduXCI6XCJjZW50ZXJcIn0sXCJjb21wSWRcIjo1fV0sXCJsb2FkTGlzdFwiOltcInRlc3QvMy5wbmdcIixcInRlc3QvNC5wbmdcIixcInRlc3QvYzEucG5nXCJdLFwibG9hZExpc3QzRFwiOltdfTtcclxuICAgICAgICBjb25zdHJ1Y3RvcigpeyBzdXBlcigpfVxyXG4gICAgICAgIGNyZWF0ZUNoaWxkcmVuKCk6dm9pZCB7XHJcbiAgICAgICAgICAgIHN1cGVyLmNyZWF0ZUNoaWxkcmVuKCk7XHJcbiAgICAgICAgICAgIHRoaXMuY3JlYXRlVmlldyhCaWdJdGVtVUkudWlWaWV3KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBSRUcoXCJ1aS50ZXN0LkJpZ0l0ZW1VSVwiLEJpZ0l0ZW1VSSk7XHJcbn1cciIsImltcG9ydCB7IHVpIH0gZnJvbSBcIi4uL3VpL2xheWFNYXhVSVwiXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJpZ1JhbmsgZXh0ZW5kcyB1aS50ZXN0LkJpZ1VJe1xyXG4gICAgICAgIGNvbnN0cnVjdG9yKCl7XHJcbiAgICAgICAgICAgIHN1cGVyKCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvKirojrflj5blpb3lj4vmjpLooYzmppzml7bnmoRrZXkgKi9cclxuICAgICAgICBwcml2YXRlIF9rZXk6U3RyaW5nID0gJ3Rlc3QxMDA4Nic7XHJcbiAgICAgICAgLyoqbGlzdOWIneWni+WMluS9v+eUqOeahOaVsOaNriAqL1xyXG4gICAgICAgIHByaXZhdGUgYXJyOkFycmF5PGFueT4gPSBbXHJcbiAgICAgICAge2luZGV4OjEsYXZhdGFySVA6J3Rlc3QvNC5wbmcnLFVzZXJOYW1lOlwi5rWL6K+V55So5oi3MVwiLFJhbmtWYWx1ZToxMDB9LFxyXG4gICAgICAgIHtpbmRleDoyLGF2YXRhcklQOid0ZXN0LzQucG5nJyxVc2VyTmFtZTpcIua1i+ivleeUqOaItzJcIixSYW5rVmFsdWU6NzV9LFxyXG4gICAgICAgIHtpbmRleDozLGF2YXRhcklQOid0ZXN0LzQucG5nJyxVc2VyTmFtZTpcIua1i+ivleeUqOaItzNcIixSYW5rVmFsdWU6NTB9LFxyXG4gICAgICAgIHtpbmRleDo0LGF2YXRhcklQOid0ZXN0LzQucG5nJyxVc2VyTmFtZTpcIua1i+ivleeUqOaItzRcIixSYW5rVmFsdWU6MjV9XHJcbiAgICAgICAgXVxyXG5cclxuICAgICAgICAvKipcclxuICAgICAgICAgKiDliJ3lp4vljJZcclxuICAgICAgICAgKi9cclxuICAgICAgICBwdWJsaWMgaW5pdCgpIHtcclxuICAgICAgICAgICAgTGF5YS5zdGFnZS5hZGRDaGlsZCh0aGlzKTtcclxuICAgICAgICAgICAgdGhpcy5fbGlzdC52U2Nyb2xsQmFyU2tpbiA9IFwiXCI7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwdWJsaWMgcmVmcmVzaCgpIDogdm9pZHtcclxuICAgICAgICAgICAgaWYoTGF5YS5Ccm93c2VyLm9uTWluaUdhbWUpe1xyXG4gICAgICAgICAgICAgICAgLy8g55u05o6l5bGV56S65pWw5o2uXHJcbiAgICAgICAgICAgICAgICB0aGlzLmdldEZyaWVuZERhdGEoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNldGxpc3QodGhpcy5hcnIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICog6I635Y+W5aW95Y+L5o6S6KGMXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgcHJpdmF0ZSAgZ2V0RnJpZW5kRGF0YSgpOnZvaWR7XHJcbiAgICAgICAgICAgIHZhciBfJHRoaXMgPSB0aGlzO1xyXG4gICAgICAgICAgICB3eC5nZXRGcmllbmRDbG91ZFN0b3JhZ2Uoe1xyXG4gICAgICAgICAgICAgICAga2V5TGlzdDpbdGhpcy5fa2V5XSxcclxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6ZnVuY3Rpb24ocmVzKTp2b2lke1xyXG4gICAgICAgICAgICAgICAgICAgIC8v5YWz5LqO5ou/5Yiw55qE5pWw5o2u6K+m57uG5oOF5Ya15Y+v5Lul5Lqn55yL5b6u5L+h5paH5qGjXHJcbiAgICAgICAgICAgICAgICAgICAgLy9odHRwczovL2RldmVsb3BlcnMud2VpeGluLnFxLmNvbS9taW5pZ2FtZS9kZXYvYXBpL1VzZXJHYW1lRGF0YS5odG1sXHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGxpc3REYXRhO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBvYmo7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGt2O1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBhcnIgPSBbXTtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnLS0tLS0tLS0tLS0tLS0tLS1nZXRGcmllbmRDbG91ZFN0b3JhZ2UtLS0tLS0tLS0tLS0nKTtcclxuICAgICAgICAgICAgICAgICAgICBpZihyZXMuZGF0YSl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvcih2YXIgaSA9IDA7aTxyZXMuZGF0YS5sZW5ndGg7aSsrKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9iaiA9IHJlcy5kYXRhW2ldO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYoIShvYmouS1ZEYXRhTGlzdC5sZW5ndGgpKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL+aLieWPluaVsOaNruaYr++8jOS9v+eUqOS6huWkmuWwkeS4qmtleS0gS1ZEYXRhTGlzdOeahOaVsOe7hOWwseacieWkmuWwkVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy/mm7Tor6bnu4bnmoRLVkRhdGHlj6/ku6Xmn6XnnIvlvq7kv6HmlofmoaM6aHR0cHM6Ly9kZXZlbG9wZXJzLndlaXhpbi5xcS5jb20vbWluaWdhbWUvZGV2L2FwaS9LVkRhdGEuaHRtbFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAga3YgPSBvYmouS1ZEYXRhTGlzdFswXTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKGt2LmtleSE9XyR0aGlzLl9rZXkpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWVcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGt2ID0gSlNPTi5wYXJzZShrdi52YWx1ZSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpc3REYXRhID0ge307XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaXN0RGF0YS5hdmF0YXJJUCA9IG9iai5hdmF0YXJVcmw7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaXN0RGF0YS5Vc2VyTmFtZSA9IG9iai5uaWNrbmFtZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpc3REYXRhLm9wZW5JRCA9IG9iai5vcGVuaWQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaXN0RGF0YS5SYW5rVmFsdWUgPSBrdi53eGdhbWUudmFsdWUxLnNjb3JlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGlzdERhdGEudXBkYXRlX3RpbWU9a3Yud3hnYW1lLnVwZGF0ZV90aW1lO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXJyLnB1c2gobGlzdERhdGEpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8v5qC55o2uUmFua1ZhbHVl5o6S5bqPXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGFyciA9IGFyci5zb3J0KGZ1bmN0aW9uKGEsYil7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gYi5SYW5rVmFsdWUgLSBhLlJhbmtWYWx1ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8v5aKe5Yqg5LiA5Liq55So5LqO5p+l55yL55qEaW5kZXjmjpLlkI1cclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9yKHZhciBpID0gMDsgaTwgYXJyLmxlbmd0aDtpKyspe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXJyW2ldLmluZGV4ID0gaSArIDE7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgLy/orr7nva7mlbDnu4RcclxuICAgICAgICAgICAgICAgICAgICAgICAgXyR0aGlzLnNldGxpc3QoYXJyKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAsZmFpbDpmdW5jdGlvbihkYXRhKTp2b2lke1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCctLS0tLS0tLS0tLS0tLS0tLS3ojrflj5bmiZjnrqHmlbDmja7lpLHotKUtLS0tLS0tLS0tLS0tLS0tLS0tLScpO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICog5LiK5oql6Ieq5bex55qE5pWw5o2uXHJcbiAgICAgICAgICogQHBhcmFtIGRhdGEg5LiK5oql5pWw5o2uXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgcHVibGljIHNldFNlbGZEYXRhKGRhdGE6U3RyaW5nKTp2b2lke1xyXG4gICAgICAgICAgICB2YXIga3ZEYXRhTGlzdCA9IFtdO1xyXG4gICAgICAgICAgICB2YXIgb2JqOmFueSA9IHt9O1xyXG4gICAgICAgICAgICBvYmoud3hnYW1lID17fTtcclxuICAgICAgICAgICAgb2JqLnd4Z2FtZS52YWx1ZTEgPSBkYXRhO1xyXG4gICAgICAgICAgICBvYmoud3hnYW1lLnVwZGF0ZV90aW1lID0gTGF5YS5Ccm93c2VyLm5vdygpO1xyXG4gICAgICAgICAgICBrdkRhdGFMaXN0LnB1c2goe1wia2V5XCI6dGhpcy5fa2V5LFwidmFsdWVcIjpKU09OLnN0cmluZ2lmeShvYmopfSk7XHJcbiAgICAgICAgICAgIHd4LnNldFVzZXJDbG91ZFN0b3JhZ2Uoe1xyXG4gICAgICAgICAgICAgICAgS1ZEYXRhTGlzdDprdkRhdGFMaXN0LFxyXG4gICAgICAgICAgICAgICAgc3VjY2VzczpmdW5jdGlvbihlKTp2b2lke1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCctLS0tLXN1Y2Nlc3M6JyArIEpTT04uc3RyaW5naWZ5KGUpKTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBmYWlsOmZ1bmN0aW9uKGUpOnZvaWR7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJy0tLS0tZmFpbDonICsgSlNPTi5zdHJpbmdpZnkoZSkpO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGNvbXBsZXRlOmZ1bmN0aW9uKGUpOnZvaWR7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJy0tLS0tY29tcGxldGU6JyArIEpTT04uc3RyaW5naWZ5KGUpKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBwdWJsaWMgZ2V0U2VsZkRhdGEoaGFuZGxlciA6IExheWEuSGFuZGxlcik6dm9pZHtcclxuICAgICAgICAgICAgdmFyIGtleUxpc3QgPSBbXTtcclxuICAgICAgICAgICAgdmFyIG9iajphbnkgPSB7fTtcclxuICAgICAgICAgICAga2V5TGlzdC5wdXNoKHRoaXMuX2tleSk7XHJcbiAgICAgICAgICAgIHd4W1wiZ2V0VXNlckNsb3VkU3RvcmFnZVwiXSh7XHJcbiAgICAgICAgICAgICAgICBrZXlMaXN0OmtleUxpc3QsXHJcbiAgICAgICAgICAgICAgICBzdWNjZXNzOmZ1bmN0aW9uKGUgOiBhbnlbXSk6dm9pZHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnLS0tLS1zdWNjZXNzOicgKyBKU09OLnN0cmluZ2lmeShlKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYoZVtcIktWRGF0YUxpc3RcIl0ubGVuZ3RoID4gMClcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBkYXRhID0gSlNPTi5wYXJzZShlW1wiS1ZEYXRhTGlzdFwiXVswXS52YWx1ZSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gbGV0IGRhdGEgPSBKU09OLnBhcnNlKGVbXCJLVkRhdGFMaXN0XCJdWzBdLnZhbHVlLnd4Z2FtZS5zY29yZSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgaGFuZGxlci5ydW5XaXRoKGRhdGEud3hnYW1lLnZhbHVlMS5zY29yZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGVsc2UgXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBoYW5kbGVyLnJ1bldpdGgoMCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGZhaWw6ZnVuY3Rpb24oZSk6dm9pZHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnLS0tLS1mYWlsOicgKyBKU09OLnN0cmluZ2lmeShlKSk7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgY29tcGxldGU6ZnVuY3Rpb24oZSk6dm9pZHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnLS0tLS1jb21wbGV0ZTonICsgSlNPTi5zdHJpbmdpZnkoZSkpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICog6K6+572ubGlzdCBhcnJcclxuICAgICAgICAgKiBAcGFyYW0gYXJyIOi1i+WAvOeUqOeahGFyclxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHByaXZhdGUgc2V0bGlzdChhcnIpOnZvaWR7XHJcbiAgICAgICAgICAgIHRoaXMuX2xpc3QuYXJyYXkgPWFycjtcclxuICAgICAgICAgICAgdGhpcy5fbGlzdC5yZWZyZXNoKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4iLCJpbXBvcnQgeyB1aSB9ICBmcm9tIFwiLi4vdWkvbGF5YU1heFVJXCJcclxuICAgIGV4cG9ydCBkZWZhdWx0IGNsYXNzIEJpZ0l0ZW0gZXh0ZW5kcyB1aS50ZXN0LkJpZ0l0ZW1VSXtcclxuICAgICAgICBjb25zdHJ1Y3Rvcigpe1xyXG4gICAgICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgIHB1YmxpYyBzZXQgZGF0YVNvdXJjZSh2YWx1ZSl7XHJcbiAgICAgICAgICAgIGlmKCF2YWx1ZSlcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgdGhpcy5pbWdfaGVhZC5za2luID0gdmFsdWUuYXZhdGFySVA7XHJcbiAgICAgICAgICAgIHRoaXMudGV4dF9uYW1lLnRleHQgPSB2YWx1ZS5Vc2VyTmFtZTtcclxuICAgICAgICAgICAgdGhpcy50ZXh0X3Njb3JlLnRleHQgPSB2YWx1ZS5SYW5rVmFsdWU7XHJcbiAgICAgICAgfVxyXG4gICAgfSAgIFxyXG4iXX0=

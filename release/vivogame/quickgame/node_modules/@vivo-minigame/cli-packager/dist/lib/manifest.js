"use strict";var _interopRequireWildcard=require("@babel/runtime-corejs2/helpers/interopRequireWildcard"),_interopRequireDefault=require("@babel/runtime-corejs2/helpers/interopRequireDefault"),_Object$defineProperty=require("@babel/runtime-corejs2/core-js/object/define-property");_Object$defineProperty(exports,"__esModule",{value:!0}),exports.check=check,exports.get=get,exports.add=add,exports.update=update;var _stringify=_interopRequireDefault(require("@babel/runtime-corejs2/core-js/json/stringify")),_cliSharedUtils=require("@vivo-minigame/cli-shared-utils"),constanst=_interopRequireWildcard(require("./constanst")),paths=_interopRequireWildcard(require("./paths"));/**
 * 校验当前工程是否存在必要的文件
 */function check(){if(!_cliSharedUtils.fs.existsSync(paths.MANIFEST))throw(0,_cliSharedUtils.error)(`请确认项目${paths.SRC}下存在文件：${paths.MANIFEST}`),new Error(`请确认项目${paths.SRC}下存在文件：${paths.MANIFEST}`);if(!_cliSharedUtils.fs.existsSync(paths.ENTRY))throw(0,_cliSharedUtils.error)(`请确认项目${paths.SRC}下存在文件：${paths.ENTRY}`),new Error(`请确认项目${paths.SRC}下存在文件：${paths.ENTRY}`)}function get(){try{const a=_cliSharedUtils.fs.readJsonSync(paths.MANIFEST);return a}catch(a){return(0,_cliSharedUtils.error)(`读取小游戏配置文件出错！`),(0,_cliSharedUtils.error)(a),{}}}/**
 * 更新/添加 manifest 字段
 * @param {Buffer} content manifest.json的二进制内容
 * @param {Boolean} release是否是release版本
 */function add(a,b){const c=get();c[a]=b;try{_cliSharedUtils.fs.outputJsonSync(paths.MANIFEST,c,{spaces:2})}catch(a){a(a)}}/**
 * 更新manifest文件
 * @param {Buffer} content manifest.json的二进制内容
 * @param {Boolean} release是否是release版本
 */function update({content:a,release:b}){let c;try{c=JSON.parse(a.toString())}catch(a){throw(0,_cliSharedUtils.error)(`解析${constanst.MANIFEST}文件出错`),a}// 更新config.debug
// 更新内容
return c.config=c.config||{},c.config.debug=!b,c.minPlatformVersion||(c.minPlatformVersion=101),(0,_stringify.default)(c,null,2)}
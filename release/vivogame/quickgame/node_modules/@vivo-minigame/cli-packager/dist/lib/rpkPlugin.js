"use strict";var _interopRequireDefault=require("@babel/runtime-corejs2/helpers/interopRequireDefault"),_Object$defineProperty=require("@babel/runtime-corejs2/core-js/object/define-property");_Object$defineProperty(exports,"__esModule",{value:!0}),exports.default=rpkPlugin;var _path=_interopRequireDefault(require("path")),_jszip=_interopRequireDefault(require("jszip")),_cliSharedUtils=require("@vivo-minigame/cli-shared-utils"),_readdir=_interopRequireDefault(require("./readdir")),_constanst=require("./constanst");// 压缩参数，设置输出 buffer，以便对 buffer 进行操作
const COMPRESS_OPTS={type:"nodebuffer",compression:"DEFLATE",compressionOptions:{level:9}/**
 * 打插件包 不使用zip，md5值会变，所以单独提出来
 * @param {String} name rpk包的文件名
 * @param {Array(String)} pluginPath 插件目录名称
 * @param {String} pathTo 打包rpk到何处
 */};async function rpkPlugin(a,b,c){_cliSharedUtils.fs.ensureDirSync(c),(0,_cliSharedUtils.info)(`${_constanst.LOG_TITLE}开始压缩:${a} from:${b}`);const d=_path.default.join(c,a),e=new _jszip.default,f=(0,_readdir.default)(_path.default.join(_cliSharedUtils.projectPath,b,"/"));f.forEach(a=>{const c=_path.default.join(_cliSharedUtils.projectPath,b,"/",a);e.file(a,_cliSharedUtils.fs.createReadStream(c))});const g=await e.generateAsync(COMPRESS_OPTS);_cliSharedUtils.fs.outputFileSync(d,g)}